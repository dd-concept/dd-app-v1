{"version":3,"file":"components-zySY0mqS.js","sources":["../../src/components/ui/tooltip.tsx","../../src/components/BottomNavigation.tsx","../../src/components/PageLayout.tsx","../../src/components/EmojiAvatar.tsx","../../src/components/UserAvatar.tsx","../../src/components/LoadingSpinner.tsx","../../src/components/BannerSwiper.tsx","../../src/components/DDManagerCard.tsx","../../src/components/Story.tsx","../../src/components/Stories.tsx","../../src/components/StoryViewer.tsx","../../src/components/ProductCard.tsx","../../src/components/SizeSelector.tsx","../../src/components/PhotoSwiper.tsx","../../src/components/ui/badge.tsx","../../src/components/OrderCard.tsx","../../src/components/ReferralCard.tsx","../../src/components/DDCoinsInfoModal.tsx","../../src/components/ClientInfoForm.tsx","../../src/components/CartItem/CartItem.tsx","../../src/components/PromocodeInput.tsx","../../src/components/ScrollToTop.tsx"],"sourcesContent":["import * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","import React from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { Home, ShoppingBag, Calculator, ShoppingCart } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { useCart } from '@/contexts/CartContext';\nimport { useTheme } from 'next-themes';\nimport { hapticSelection } from '@/utils/telegramUtils';\nimport { scrollToTop, scrollToTopWithRetries } from '@/utils/scrollUtils';\n\nconst BottomNavigation: React.FC = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { itemCount } = useCart();\n  const { theme } = useTheme();\n  \n  const isActive = (path: string) => location.pathname === path;\n  \n  // Custom navigation handler with haptic feedback and scroll to top\n  const handleNavigation = (path: string) => (e: React.MouseEvent) => {\n    e.preventDefault();\n    \n    // Only trigger haptic feedback and navigate if not already on this path\n    if (!isActive(path)) {\n      // Trigger haptic feedback\n      hapticSelection();\n      \n      // Force scroll to top immediately\n      scrollToTop();\n      \n      // Navigate to the path\n      navigate(path);\n      \n      // Try scrolling again after navigation with delays\n      [50, 100, 200].forEach(delay => {\n        setTimeout(scrollToTop, delay);\n      });\n    }\n  };\n  \n  return (\n    <nav className=\"fixed bottom-0 left-0 right-0 z-50 bottom-nav-bar pb-4\">\n      <div className=\"grid grid-cols-4 w-full max-w-md mx-auto h-28\">\n        <Link\n          to=\"/\"\n          onClick={handleNavigation('/')}\n          className={cn(\n            'flex items-start justify-center pt-4 transition-all duration-200',\n            isActive('/') ? 'text-telegram-button active' : 'text-telegram-hint'\n          )}\n          aria-current={isActive('/') ? 'page' : undefined}\n        >\n          <Home size={32} />\n        </Link>\n        \n        <Link\n          to=\"/shop\"\n          onClick={handleNavigation('/shop')}\n          className={cn(\n            'flex items-start justify-center pt-4 transition-all duration-200',\n            isActive('/shop') ? 'text-telegram-button active' : 'text-telegram-hint'\n          )}\n          aria-current={isActive('/shop') ? 'page' : undefined}\n        >\n          <ShoppingBag size={32} />\n        </Link>\n        \n        <Link\n          to=\"/calculator\"\n          onClick={handleNavigation('/calculator')}\n          className={cn(\n            'flex items-start justify-center pt-4 transition-all duration-200',\n            isActive('/calculator') ? 'text-telegram-button active' : 'text-telegram-hint'\n          )}\n          aria-current={isActive('/calculator') ? 'page' : undefined}\n        >\n          <Calculator size={32} />\n        </Link>\n\n        <Link\n          to=\"/cart\"\n          onClick={handleNavigation('/cart')}\n          className={cn(\n            'flex items-start justify-center pt-4 relative transition-all duration-200',\n            isActive('/cart') ? 'text-telegram-button active' : 'text-telegram-hint'\n          )}\n          aria-current={isActive('/cart') ? 'page' : undefined}\n        >\n          <div className=\"relative\">\n            <ShoppingCart size={32} />\n            {itemCount > 0 && (\n              <span className=\"absolute -top-2 -right-2 bg-red-500 text-white text-xs font-bold w-6 h-6 flex items-center justify-center rounded-full badge\">\n                {itemCount}\n              </span>\n            )}\n          </div>\n        </Link>\n      </div>\n    </nav>\n  );\n};\n\nexport default BottomNavigation;\n\n","import React, { ReactNode } from 'react';\nimport BottomNavigation from './BottomNavigation';\nimport { cn } from '@/lib/utils';\n\ninterface PageLayoutProps {\n  children: ReactNode;\n  className?: string;\n  fullHeight?: boolean;\n  hideNavigation?: boolean;\n}\n\nconst PageLayout: React.FC<PageLayoutProps> = ({\n  children,\n  className,\n  fullHeight = false,\n  hideNavigation = false,\n}) => {\n  return (\n    <div\n      className={cn(\n        'w-full pb-52 max-w-md mx-auto', // Increased bottom padding for better mobile spacing\n        fullHeight ? 'min-h-screen' : '',\n        className\n      )}\n      style={{ backgroundColor: 'transparent' }}\n    >\n      <div className=\"animate-fade-in\">\n        {children}\n      </div>\n      {!hideNavigation && <BottomNavigation />}\n    </div>\n  );\n};\n\nexport default PageLayout;\n","\nimport React, { useEffect, useState } from 'react';\nimport { cn } from '@/lib/utils';\nimport { getRandomAvatarEmoji, getConsistentEmoji } from '@/utils/emojiUtils';\n\ninterface EmojiAvatarProps {\n  emoji?: string;\n  username?: string;\n  size?: 'sm' | 'md' | 'lg';\n  className?: string;\n  randomize?: boolean;\n}\n\nconst EmojiAvatar: React.FC<EmojiAvatarProps> = ({\n  emoji,\n  username,\n  size = 'md',\n  className,\n  randomize = false,\n}) => {\n  const [displayEmoji, setDisplayEmoji] = useState<string>(emoji || '😊');\n\n  useEffect(() => {\n    if (emoji) {\n      setDisplayEmoji(emoji);\n    } else if (username) {\n      setDisplayEmoji(getConsistentEmoji(username, 'avatar'));\n    } else if (randomize) {\n      setDisplayEmoji(getRandomAvatarEmoji());\n    }\n  }, [emoji, username, randomize]);\n\n  const sizeClasses = {\n    sm: 'w-8 h-8 text-lg',\n    md: 'w-12 h-12 text-2xl',\n    lg: 'w-16 h-16 text-3xl',\n  };\n\n  return (\n    <div \n      className={cn(\n        'flex items-center justify-center rounded-full bg-telegram-light animate-pulse-slow',\n        sizeClasses[size],\n        className\n      )}\n    >\n      <span className=\"animate-float\">{displayEmoji}</span>\n    </div>\n  );\n};\n\nexport default EmojiAvatar;\n","import React from 'react';\nimport EmojiAvatar from './EmojiAvatar';\nimport { TelegramUser } from '@/services/api';\n\ninterface UserAvatarProps {\n  user: TelegramUser | null;\n  emoji: string;\n  size?: 'sm' | 'md' | 'lg';\n  className?: string;\n}\n\nconst UserAvatar: React.FC<UserAvatarProps> = ({ \n  user, \n  emoji, \n  size = 'md', \n  className = '' \n}) => {\n  // Size mapping for the avatar\n  const sizeMap = {\n    sm: 'w-8 h-8',\n    md: 'w-12 h-12',\n    lg: 'w-16 h-16'\n  };\n  \n  const sizeClass = sizeMap[size];\n  \n  // If user has a photo_url, display it\n  if (user?.photo_url) {\n    return (\n      <div className={`${sizeClass} rounded-full overflow-hidden ${className}`}>\n        <img \n          src={user.photo_url} \n          alt={`${user.first_name}'s profile`} \n          className=\"w-full h-full object-cover\"\n          onError={(e) => {\n            // Fallback to emoji avatar if image fails to load\n            console.error('Error loading profile image, falling back to emoji avatar');\n            e.currentTarget.style.display = 'none';\n            // We can't directly render the EmojiAvatar here, so we'll just hide the img\n          }}\n        />\n      </div>\n    );\n  }\n  \n  // Otherwise, use the emoji avatar\n  return (\n    <EmojiAvatar \n      emoji={emoji} \n      size={size} \n      className={className}\n    />\n  );\n};\n\nexport default UserAvatar; ","import React from 'react';\nimport { cn } from '@/lib/utils';\n\ninterface LoadingSpinnerProps {\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n  className?: string;\n  fillColor?: string;\n  inline?: boolean;\n}\n\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({\n  size = 'md',\n  className,\n  fillColor,\n  inline = false,\n}) => {\n  // Use Telegram theme color by default if not specified\n  const defaultFillColor = 'fill-telegram-blue';\n  \n  const sizeClasses = {\n    xs: 'w-4 h-4',\n    sm: 'w-6 h-6',\n    md: 'w-10 h-10',\n    lg: 'w-16 h-16',\n    xl: 'w-20 h-20',\n  };\n\n  const spinner = (\n      <svg\n        className={cn(\n          'animate-spin',\n          sizeClasses[size],\n          className\n        )}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n      >\n        <circle\n          className=\"opacity-25\"\n          cx=\"12\"\n          cy=\"12\"\n          r=\"10\"\n          stroke=\"currentColor\"\n          strokeWidth=\"4\"\n        ></circle>\n        <path\n        className={fillColor || defaultFillColor}\n          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n        ></path>\n      </svg>\n  );\n\n  if (inline) {\n    return spinner;\n  }\n\n  return (\n    <div className=\"flex justify-center items-center\">\n      {spinner}\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Pagination, Autoplay, A11y, EffectFade } from 'swiper/modules';\nimport { useNavigate } from 'react-router-dom';\nimport { scrollToTop } from '@/utils/scrollUtils';\n\n// Import Swiper styles\nimport 'swiper/css';\nimport 'swiper/css/pagination';\nimport 'swiper/css/effect-fade';\n\n// Import the custom CSS\nimport './BannerSwiper.css';\n\ninterface BannerItem {\n  image: string;\n  link?: string;\n  external?: boolean;\n}\n\ninterface BannerSwiperProps {\n  banners: BannerItem[];\n  className?: string;\n  autoPlayInterval?: number;\n}\n\nconst BannerSwiper: React.FC<BannerSwiperProps> = ({ \n  banners,\n  className = '',\n  autoPlayInterval = 5000,\n}) => {\n  const navigate = useNavigate();\n  \n  const handleBannerClick = (banner: BannerItem) => {\n    if (!banner.link) return;\n    \n    if (banner.external) {\n      window.open(banner.link, '_blank', 'noopener,noreferrer');\n    } else {\n      // Force scroll to top immediately before navigation\n      scrollToTop();\n      \n      // Navigate to the link\n      navigate(banner.link);\n      \n      // Try scrolling again after navigation with delays\n      [50, 100, 200].forEach(delay => {\n        setTimeout(scrollToTop, delay);\n      });\n    }\n  };\n  \n  if (!banners || banners.length === 0) {\n    return null;\n  }\n  \n  return (\n    <div className={`banner-swiper-container w-full relative ${className}`}>\n      <Swiper\n        modules={[Pagination, Autoplay, A11y, EffectFade]}\n        spaceBetween={0}\n        slidesPerView={1}\n        pagination={{ \n          clickable: true,\n          type: 'bullets',\n          bulletClass: 'swiper-pagination-bullet',\n          bulletActiveClass: 'swiper-pagination-bullet-active',\n          el: '.banner-pagination'\n        }}\n        navigation={false}\n        autoplay={{\n          delay: autoPlayInterval,\n          disableOnInteraction: false,\n        }}\n        loop={banners.length > 1}\n        effect=\"slide\"\n        className=\"w-full aspect-[2.5/1]\"\n      >\n        {banners.map((banner, index) => (\n          <SwiperSlide \n            key={index} \n            className=\"w-full h-full cursor-pointer\"\n            onClick={() => handleBannerClick(banner)}\n          >\n            <div \n              className=\"w-full h-full bg-cover bg-center rounded-lg\"\n              style={{ backgroundImage: `url(${banner.image})` }}\n            />\n          </SwiperSlide>\n        ))}\n      </Swiper>\n      <div className=\"banner-pagination flex justify-center mt-2\"></div>\n    </div>\n  );\n};\n\nexport default BannerSwiper; ","import React from 'react';\nimport { ArrowRight } from 'lucide-react';\nimport managerBg from '@/assets/manager_banner.webp';\n\nconst DDManagerCard: React.FC = () => {\n  return (\n    <a \n      href=\"https://t.me/dd_helper\" \n      target=\"_blank\" \n      rel=\"noopener noreferrer\"\n      className=\"bg-cover bg-center rounded-lg p-4 shadow-sm hover-lift flex flex-col justify-between transform hover:-translate-y-1 hover:shadow-md transition-all duration-300\"\n      style={{ backgroundImage: `url(${managerBg})` }}\n    >\n      <div>\n        <h3 className=\"text-xl font-medium text-black/80\">DD MANAGER</h3>\n      </div>\n      <div className=\"flex justify-between items-center\">\n        <p className=\"text-xs text-black/50\">Поможет определиться с цветом и размером</p>\n        {/* <ArrowRight size={20} className=\"text-white\" /> */}\n      </div>\n      <div className=\"flex justify-end mt-1\">\n              <ArrowRight size={20} className=\"text-white\" />\n      </div>\n    </a>\n  );\n};\n\nexport default DDManagerCard; ","import React from 'react';\n\ninterface StoryItemProps {\n  previewImage: string;\n  title: string;\n  onClick: () => void;\n  viewed?: boolean;\n}\n\nconst Story: React.FC<StoryItemProps> = ({ \n  previewImage, \n  title, \n  onClick, \n  viewed = false \n}) => {\n  // Format the title to handle newlines\n  const formattedTitle = title.split('\\n').map((line, index, array) => (\n    <React.Fragment key={index}>\n      {line}\n      {index < array.length - 1 && <br />}\n    </React.Fragment>\n  ));\n\n  return (\n    <div className=\"flex flex-col items-center\" onClick={onClick}>\n      <div className={`w-16 h-16 rounded-full overflow-hidden border-2 ${viewed ? 'border-gray-300' : 'border-telegram-blue'} cursor-pointer`}>\n        <img \n          src={previewImage} \n          alt={title} \n          className=\"w-full h-full object-cover\"\n        />\n      </div>\n      <div className=\"text-xs text-center w-16 mt-1 leading-tight\">\n        {formattedTitle}\n      </div>\n    </div>\n  );\n};\n\nexport default Story; ","import React from 'react';\nimport Story from './Story';\n\nexport interface StoryContent {\n  id: string;\n  images: string[];\n  title: string;\n  previewImage: string;\n  viewed?: boolean;\n}\n\ninterface StoriesProps {\n  stories: StoryContent[];\n  onStoryClick: (storyId: string) => void;\n  className?: string;\n}\n\nconst Stories: React.FC<StoriesProps> = ({ stories, onStoryClick, className = '' }) => {\n  if (!stories || stories.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={`w-full ${className}`}>\n      <div className=\"flex overflow-x-auto gap-5 no-scrollbar\">\n        {stories.map((story) => (\n          <Story\n            key={story.id}\n            previewImage={story.previewImage}\n            title={story.title}\n            viewed={story.viewed}\n            onClick={() => onStoryClick(story.id)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Stories; ","import React, { useState, useCallback, useRef } from 'react';\nimport { X, ChevronLeft, ChevronRight } from 'lucide-react';\nimport { StoryContent } from './Stories';\nimport { hapticSelection } from '@/utils/telegramUtils';\n\ninterface ImageSwiperProps {\n  story: StoryContent;\n  onClose: () => void;\n}\n\nconst ImageSwiper: React.FC<ImageSwiperProps> = ({ \n  story, \n  onClose\n}) => {\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  \n  // Swipe state\n  const [isDragging, setIsDragging] = useState(false);\n  const [translateX, setTranslateX] = useState(0);\n  const touchStartRef = useRef({ x: 0, y: 0 });\n  const swiperRef = useRef<HTMLDivElement>(null);\n\n  // Handle navigation\n  const goToPrevious = useCallback(() => {\n    hapticSelection();\n    if (currentImageIndex > 0) {\n      setCurrentImageIndex(prev => prev - 1);\n    }\n  }, [currentImageIndex]);\n\n  const goToNext = useCallback(() => {\n    hapticSelection();\n    if (currentImageIndex < story.images.length - 1) {\n      setCurrentImageIndex(prev => prev + 1);\n    }\n  }, [currentImageIndex, story.images.length]);\n\n  // Touch handlers for swipe navigation\n  const handleTouchStart = (e: React.TouchEvent) => {\n    e.preventDefault();\n    \n    touchStartRef.current = { \n      x: e.touches[0].clientX,\n      y: e.touches[0].clientY\n    };\n  };\n  \n  const handleTouchMove = (e: React.TouchEvent) => {\n    e.preventDefault();\n    \n    const touchX = e.touches[0].clientX;\n    const touchY = e.touches[0].clientY;\n    const deltaX = touchX - touchStartRef.current.x;\n    const deltaY = Math.abs(touchY - touchStartRef.current.y);\n    \n    // Only handle horizontal swipes (deltaX > deltaY means more horizontal than vertical)\n    const isHorizontalMovement = Math.abs(deltaX) > deltaY;\n    const hasSignificantMovement = Math.abs(deltaX) > 20;\n    \n    if (isHorizontalMovement && hasSignificantMovement) {\n      if (!isDragging) {\n        setIsDragging(true);\n      }\n      \n      // Limit the drag distance\n      const maxDrag = 100;\n      const limitedDeltaX = Math.min(Math.max(deltaX, -maxDrag), maxDrag);\n      setTranslateX(limitedDeltaX);\n    }\n  };\n  \n  const handleTouchEnd = (e: React.TouchEvent) => {\n    e.preventDefault();\n    \n    if (isDragging) {\n      const swipeThreshold = 50;\n      \n      if (translateX > swipeThreshold && currentImageIndex > 0) {\n        // Swiped right - go to previous\n        goToPrevious();\n      } else if (translateX < -swipeThreshold && currentImageIndex < story.images.length - 1) {\n        // Swiped left - go to next\n        goToNext();\n      }\n      \n      // Reset position\n      setTranslateX(0);\n      setIsDragging(false);\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black/90 z-50 flex items-center justify-center p-4\">\n      {/* Background overlay */}\n      <div \n        className=\"absolute inset-0\" \n        onClick={onClose}\n      />\n      \n      {/* Image swiper container */}\n      <div \n        ref={swiperRef}\n        className=\"relative bg-white dark:bg-gray-800 rounded-2xl shadow-2xl max-w-md w-full max-h-[80vh] overflow-hidden\"\n        onTouchStart={handleTouchStart}\n        onTouchMove={handleTouchMove}\n        onTouchEnd={handleTouchEnd}\n      >\n        {/* Close button */}\n        <button \n          onClick={() => {\n            hapticSelection();\n            onClose();\n          }}\n          className=\"absolute top-4 right-4 z-20 text-gray-600 dark:text-gray-300 p-2 bg-white/80 dark:bg-gray-800/80 rounded-full hover:bg-white dark:hover:bg-gray-700 transition-colors\"\n        >\n          <X size={20} />\n        </button>\n\n        {/* Header with title */}\n        <div className=\"absolute top-0 left-0 right-0 z-10 bg-gradient-to-b from-black/50 to-transparent p-4\">\n          <h3 className=\"text-white font-semibold text-lg\">{story.title}</h3>\n        </div>\n\n        {/* Image container */}\n        <div className=\"relative aspect-[3/4] overflow-hidden\">\n          <div \n            className=\"flex transition-transform duration-300 ease-out h-full\"\n            style={{ \n              transform: `translateX(calc(-${currentImageIndex * 100}% + ${translateX}px))` \n            }}\n          >\n            {story.images.map((image, index) => (\n              <div \n                key={index}\n                className=\"min-w-full h-full\"\n              >\n                <img \n                  src={image} \n                  alt={`${story.title} - ${index + 1}`}\n                  className=\"w-full h-full object-cover\"\n                  draggable={false}\n                />\n              </div>\n            ))}\n          </div>\n\n          {/* Navigation buttons */}\n          {currentImageIndex > 0 && (\n            <button\n              onClick={goToPrevious}\n              className=\"absolute left-4 top-1/2 -translate-y-1/2 z-10 p-2 bg-black/50 text-white rounded-full hover:bg-black/70 transition-colors\"\n            >\n              <ChevronLeft size={24} />\n            </button>\n          )}\n          \n          {currentImageIndex < story.images.length - 1 && (\n            <button\n              onClick={goToNext}\n              className=\"absolute right-4 top-1/2 -translate-y-1/2 z-10 p-2 bg-black/50 text-white rounded-full hover:bg-black/70 transition-colors\"\n            >\n              <ChevronRight size={24} />\n            </button>\n          )}\n        </div>\n\n        {/* Bottom info and dots */}\n        <div className=\"p-4 bg-white dark:bg-gray-800\">\n          {/* Dot indicators */}\n          <div className=\"flex justify-center gap-2 mb-2\">\n            {story.images.map((_, index) => (\n              <button\n                key={index}\n                onClick={() => setCurrentImageIndex(index)}\n                className={`w-2 h-2 rounded-full transition-colors ${\n                  index === currentImageIndex \n                    ? 'bg-blue-500' \n                    : 'bg-gray-300 dark:bg-gray-600'\n                }`}\n              />\n            ))}\n          </div>\n          \n          {/* Image counter */}\n          <div className=\"text-center text-sm text-gray-600 dark:text-gray-400\">\n            {currentImageIndex + 1} / {story.images.length}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageSwiper; ","import React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { getConsistentEmoji } from '@/utils/emojiUtils';\nimport { sortSizes } from '@/utils/sizeUtils';\nimport { cn } from '@/lib/utils';\nimport { StockItem } from '@/services/api';\nimport { hapticImpact } from '@/utils/telegramUtils';\nimport { scrollToTop } from '@/utils/scrollUtils';\n\ninterface ProductCardProps {\n  product: StockItem;\n  className?: string;\n}\n\nconst ProductCard: React.FC<ProductCardProps> = ({ product, className }) => {\n  const navigate = useNavigate();\n  \n  // Get a consistent emoji based on the product name and color\n  const productEmoji = getConsistentEmoji(`${product.item_name}-${product.color_code}`, 'product');\n  \n  // Get available sizes from the new format (array of SizeAvailability)\n  const availableSizes = Array.isArray(product.sizes) \n    ? sortSizes(product.sizes.filter(size => size.quantity > 0).map(size => size.size))\n    : [];\n\n  // Check if product has photos\n  const hasPhoto = product.photos && product.photos.length > 0;\n  \n  // Get the front photo URL (or first available)\n  const getPhotoUrl = () => {\n    if (!hasPhoto) return '';\n    \n    // Try to find a 'front' photo first\n    const frontPhoto = product.photos!.find(photo => \n      photo.photo_category === 'front' && photo.photo_url);\n    \n    // If no front photo, use the first photo\n    return frontPhoto \n      ? frontPhoto.photo_url \n      : product.photos![0].photo_url;\n  };\n  \n  // Handle click with haptic feedback\n  const handleClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    \n    // Trigger medium impact haptic feedback\n    hapticImpact('medium');\n    \n    // Force scroll to top immediately before navigation\n    scrollToTop();\n    \n    // Navigate to product details\n    navigate(`/product/${product.sku}`);\n    \n    // Try scrolling again after navigation with delays\n    [50, 100, 200].forEach(delay => {\n      setTimeout(scrollToTop, delay);\n    });\n  };\n  \n  return (\n    <Link \n      to={`/product/${product.sku}`} \n      onClick={handleClick}\n      className={cn(\n        'block bg-telegram-secondary-bg rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-all duration-300 hover-lift',\n        className\n      )}\n    >\n      <div className=\"aspect-square bg-telegram-bg flex items-center justify-center\">\n        {hasPhoto ? (\n          <img \n            src={getPhotoUrl()} \n            alt={product.item_name}\n            className=\"w-full h-full object-cover\"\n            onError={(e) => {\n              // Fallback to emoji if image fails to load\n              e.currentTarget.style.display = 'none';\n              e.currentTarget.parentElement!.innerHTML = `<span class=\"text-5xl animate-float\">${productEmoji}</span>`;\n            }}\n          />\n        ) : (\n          <span className=\"text-5xl animate-float\">{productEmoji}</span>\n        )}\n      </div>\n      \n      <div className=\"p-4 min-h-[120px] flex flex-col justify-between\">\n        <div className=\"mb-2\">\n          <div className=\"mb-1\">\n            <h3 className=\"font-medium text-telegram-text break-words line-clamp-2\">\n              {product.brand} {product.item_name}\n            </h3>\n          </div>\n        </div>\n        <div>\n          <div className=\"flex justify-between items-center mb-2\">\n            <span className=\"font-medium text-telegram-button\">\n              {typeof product.price_rub === 'string' \n                ? parseFloat(product.price_rub).toLocaleString() \n                : product.price_rub.toLocaleString()}₽\n            </span>\n            {product.color_hex && (\n              <div \n                className=\"w-3 h-3 rounded-full border border-gray-300\" \n                style={{ backgroundColor: product.color_hex }}\n              />\n            )}\n          </div>\n          <div className=\"flex flex-wrap gap-1\">\n            {availableSizes.slice(0, 3).map((size) => (\n              <span key={size} className=\"text-xs px-2 py-1 bg-telegram-bg text-telegram-text rounded-full\">\n                {size}\n              </span>\n            ))}\n            {availableSizes.length > 3 && (\n              <span className=\"text-xs px-2 py-1 bg-telegram-bg text-telegram-text rounded-full\">\n                +{availableSizes.length - 3}\n              </span>\n            )}\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default ProductCard;\n","import React from 'react';\nimport { cn } from '@/lib/utils';\n\ninterface SizeSelectorProps {\n  availableSizes: string[];\n  selectedSize: string;\n  onChange: (size: string) => void;\n  className?: string;\n}\n\nconst SizeSelector: React.FC<SizeSelectorProps> = ({\n  availableSizes,\n  selectedSize,\n  onChange,\n  className,\n}) => {\n  const handleSizeChange = (size: string) => {\n    onChange(size);\n  };\n\n  return (\n    <div className={cn('w-full', className)}>\n      {/* <h3 className=\"text-sm font-medium text-telegram-text mb-2\">Выберите размер</h3> */}\n      \n      <div className=\"flex flex-wrap gap-2\">\n        {availableSizes.map((size) => (\n          <button\n            key={size}\n            className={cn(\n              'px-4 py-2 rounded-full border transition-all duration-200',\n              selectedSize === size\n                ? 'border-telegram-button bg-telegram-button/10 text-telegram-button'\n                : 'border-telegram-hint/30 bg-telegram-bg text-telegram-text hover:border-telegram-hint/50'\n            )}\n            onClick={() => handleSizeChange(size)}\n          >\n            {size}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SizeSelector;\n","import React, { useState } from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Navigation, A11y } from 'swiper/modules';\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\n\n// Import Swiper styles - make sure they are imported in this order for proper styling\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport 'swiper/css/effect-fade';\n\n// Custom overrides for Swiper styles\nimport './PhotoSwiper.css';\n\ninterface PhotoSwiperProps {\n  photos: string[];\n  productName: string;\n  fallbackEmoji?: string;\n  className?: string;\n}\n\nconst PhotoSwiper: React.FC<PhotoSwiperProps> = ({ \n  photos,\n  productName,\n  fallbackEmoji = '📦',\n  className = '',\n}) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  \n  // Handle image loading errors\n  const handleImageError = (e: React.SyntheticEvent<HTMLImageElement, Event>) => {\n    const target = e.currentTarget;\n    target.style.display = 'none';\n    if (target.parentElement) {\n      const fallbackElement = document.createElement('div');\n      fallbackElement.className = 'w-full h-full flex items-center justify-center';\n      fallbackElement.innerHTML = `<span class=\"text-8xl animate-float\">${fallbackEmoji}</span>`;\n      target.parentElement.appendChild(fallbackElement);\n    }\n  };\n  \n  if (!photos || photos.length === 0) {\n    return (\n      <div className={`w-full aspect-square bg-telegram-bg flex items-center justify-center ${className}`}>\n        <span className=\"text-8xl animate-float\">{fallbackEmoji}</span>\n      </div>\n    );\n  }\n  \n  return (\n    <div className={`photo-swiper-container w-full aspect-square bg-telegram-bg relative ${className}`}>\n      <Swiper\n        modules={[Navigation, A11y]}\n        spaceBetween={0}\n        slidesPerView={1}\n        navigation={true}\n        onSlideChange={(swiper) => {\n          setCurrentIndex(swiper.activeIndex);\n        }}\n        className=\"w-full h-full\"\n      >\n        {photos.map((photo, index) => (\n          <SwiperSlide key={index} className=\"w-full h-full\">\n            <img \n              src={photo} \n              alt={`${productName} - ${index + 1}`}\n              className=\"w-full h-full object-cover\"\n              onError={handleImageError}\n            />\n          </SwiperSlide>\n        ))}\n      </Swiper>\n      \n      {/* Custom pagination indicator for better visibility */}\n      {photos.length > 1 && (\n        <div className=\"absolute bottom-3 left-1/2 -translate-x-1/2 bg-black/40 rounded-full px-3 py-1 z-10\">\n          <span className=\"text-white text-xs\">\n            {currentIndex + 1} / {photos.length}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PhotoSwiper; ","import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","import React, { useState } from 'react';\nimport { Badge } from '@/components/ui/badge';\nimport { ChevronDown, ChevronUp, ExternalLink } from 'lucide-react';\nimport { Order as ApiOrder, OrderItem as ApiOrderItem, OrderPromocode } from '@/services/api/types';\n\n// Extended Order interface that requires delivery properties\ninterface Order extends ApiOrder {\n  delivery_type: string;\n  delivery_price: string;\n  delivery_address: string | null;\n  delivery_info: string | null;\n  delivery_code: string | null;\n}\n\n// Extended OrderItem interface that requires additional properties\ninterface OrderItem extends ApiOrderItem {\n  id: number;\n  type: 'stock' | 'preorder';\n  status: string;\n  dewu_url: string | null;\n  shipping_type: string | null;\n  category_type: string | null;\n  weight_category: string | null;\n  color_code: string | null;\n}\n\ninterface OrderCardProps {\n  order: ApiOrder;\n}\n\nconst OrderCard: React.FC<OrderCardProps> = ({ order }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  // Handle potentially missing properties\n  const normalizedOrder: Order = {\n    ...order,\n    delivery_type: order.delivery_type || '',\n    delivery_price: order.delivery_price || '0',\n    delivery_address: order.delivery_address || null,\n    delivery_info: order.delivery_info || null,\n    delivery_code: order.delivery_code || null,\n    items: order.items.map(item => ({\n      ...item,\n      id: typeof item.id === 'number' ? item.id : 0,\n      type: (item.type as 'stock' | 'preorder') || 'stock',\n      status: item.status || order.status || '',\n      dewu_url: item.dewu_url || null,\n      shipping_type: item.shipping_type || null,\n      category_type: item.category_type || null,\n      weight_category: item.weight_category || null,\n      color_code: item.color_code || null,\n      sku: item.sku || null,\n      item_name: item.item_name || null,\n      size: item.size || '',\n      price_cny: item.price_cny || null,\n      price_rub: item.price_rub || null,\n      sale_price: item.sale_price || null,\n      quantity: item.quantity || 1\n    })) as OrderItem[]\n  };\n\n  const getStatusColor = (status: string): string => {\n    switch (status.toLowerCase()) {\n      case 'delivered':\n      case 'доставлен':\n        return 'bg-green-500';\n      case 'awaiting manager':\n      case 'ожидает менеджера':\n        return 'bg-yellow-500';\n      case 'awaiting purchase':\n      case 'ожидает покупки':\n        return 'bg-blue-500';\n      case 'cancelled':\n      case 'отменён':\n        return 'bg-red-500';\n      default:\n        return 'bg-gray-500';\n    }\n  };\n\n  const translateStatus = (status: string): string => {\n    switch (status.toLowerCase()) {\n      case 'delivered':\n        return 'Доставлен';\n      case 'awaiting manager':\n        return 'Ожидает менеджера';\n      case 'awaiting purchase':\n        return 'Ожидает покупки';\n      case 'cancelled':\n        return 'Отменён';\n      default:\n        return status;\n    }\n  };\n\n  const formatPrice = (price: string | number | null): string => {\n    if (!price) return '0';\n    const numericPrice = typeof price === 'string' ? parseFloat(price) : price;\n    return numericPrice.toLocaleString('ru-RU', { maximumFractionDigits: 2 });\n  };\n\n  const formatDate = (dateString: string): string => {\n    const date = new Date(dateString);\n    return date.toLocaleString('ru-RU', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const getItemsCountText = (count: number): string => {\n    // Rules for Russian pluralization\n    if (count % 10 === 1 && count % 100 !== 11) {\n      return 'товар';\n    } else if ([2, 3, 4].includes(count % 10) && ![12, 13, 14].includes(count % 100)) {\n      return 'товара';\n    } else {\n      return 'товаров';\n    }\n  };\n\n  return (\n    <div className=\"bg-white dark:bg-sidebar-accent rounded-lg shadow-sm overflow-hidden\">\n      {/* Order Summary - Always Visible */}\n      <div \n        className=\"p-4 cursor-pointer hover:bg-gray-50 dark:hover:bg-sidebar-primary/10 transition-colors\"\n        onClick={() => setIsExpanded(!isExpanded)}\n      >\n        <div className=\"flex justify-between items-start\">\n          <div>\n            <div className=\"flex items-center gap-2\">\n              <h3 className=\"text-lg font-medium\">Заказ #{normalizedOrder.order_id}</h3>\n              <Badge className={`${getStatusColor(normalizedOrder.status)} text-white`}>\n                {translateStatus(normalizedOrder.status)}\n              </Badge>\n            </div>\n            <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n              {formatDate(normalizedOrder.created_at)}\n            </p>\n            <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n              {normalizedOrder.items.length} {getItemsCountText(normalizedOrder.items.length)}\n            </p>\n          </div>\n          <div className=\"text-right\">\n            <p className=\"font-medium text-lg\">₽{formatPrice(normalizedOrder.final_price)}</p>\n            {normalizedOrder.promocode && (\n              <p className=\"text-sm text-telegram-blue\">\n                {normalizedOrder.promocode.promocode_text}\n              </p>\n            )}\n            <button \n              className=\"mt-2 text-telegram-blue hover:text-telegram-dark transition-colors\"\n              aria-label={isExpanded ? 'Свернуть детали' : 'Развернуть детали'}\n            >\n              {isExpanded ? <ChevronUp size={20} /> : <ChevronDown size={20} />}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Order Details - Expandable */}\n      {isExpanded && (\n        <div className=\"border-t border-gray-100 dark:border-gray-800/50\">\n          <div className=\"p-4 space-y-4\">\n            {/* Order Items */}\n            {normalizedOrder.items.map((item, index) => (\n              <div \n                key={`item-${index}-${item.id}`} \n                className=\"border-b dark:border-gray-700 pb-3 last:border-0\"\n              >\n                <div className=\"flex justify-between items-start\">\n                  <div>\n                    <div className=\"flex flex-wrap gap-2 mb-1\">\n                      <Badge className=\"bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300\">\n                        {item.type === 'stock' ? 'Сток' : 'Предзаказ'}\n                      </Badge>\n                      {item.status && (\n                        <Badge className={`${getStatusColor(item.status)} text-white`}>\n                          {translateStatus(item.status)}\n                        </Badge>\n                      )}\n                    </div>\n                    \n                    <p className=\"font-medium\">\n                      {item.item_name || (item.dewu_url ? (\n                        <a \n                          href={item.dewu_url} \n                          target=\"_blank\" \n                          rel=\"noopener noreferrer\"\n                          className=\"text-telegram-blue hover:underline flex items-center\"\n                        >\n                          {item.dewu_url.substring(0, 30)}{item.dewu_url.length > 30 ? '...' : ''}\n                          <ExternalLink size={14} className=\"ml-1\" />\n                        </a>\n                      ) : 'Товар')}\n                    </p>\n                    \n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      Размер: {item.size} {item.quantity > 1 && `× ${item.quantity}`}\n                    </p>\n                    \n                    {item.type === 'preorder' && item.price_cny && (\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        Цена (юани): ¥{formatPrice(item.price_cny)}\n                      </p>\n                    )}\n                    \n                    {item.sku && (\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        Артикул: {item.sku}\n                      </p>\n                    )}\n                    \n                    {item.shipping_type && (\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        Тип доставки: {item.shipping_type}\n                      </p>\n                    )}\n                    \n                    {item.category_type && (\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        Категория: {item.category_type}\n                      </p>\n                    )}\n                    \n                    {item.weight_category && (\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        Вес: {item.weight_category}\n                      </p>\n                    )}\n                    \n                    {item.color_code && (\n                      <div className=\"flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400\">\n                        <span>Цвет:</span>\n                        <div \n                          className=\"w-4 h-4 rounded-full border border-gray-300\" \n                          style={{ backgroundColor: item.color_code }}\n                        ></div>\n                      </div>\n                    )}\n                  </div>\n                  \n                  <div className=\"text-right\">\n                    <p className=\"font-medium\">₽{formatPrice(item.price_rub)}</p>\n                  </div>\n                </div>\n              </div>\n            ))}\n\n            {/* Order Summary */}\n            <div className=\"pt-3 border-t dark:border-gray-700\">\n              <div className=\"flex justify-between text-sm mb-1\">\n                <span className=\"text-gray-600 dark:text-gray-400\">Сумма товаров</span>\n                <span>₽{formatPrice(normalizedOrder.subtotal)}</span>\n              </div>\n\n              {normalizedOrder.delivery_code && (\n                <div className=\"flex justify-between text-sm mb-1\">\n                  <span className=\"text-gray-600 dark:text-gray-400\">\n                    Доставка: {normalizedOrder.delivery_code}\n                  </span>\n                  <span>\n                    {normalizedOrder.delivery_price === \"0\" ? \n                      \"Бесплатно\" : \n                      `₽${formatPrice(normalizedOrder.delivery_price)}`}\n                  </span>\n                </div>\n              )}\n\n              {normalizedOrder.promocode && (\n                <div className=\"flex justify-between text-sm text-telegram-blue mb-1\">\n                  <span>\n                    Промокод: {normalizedOrder.promocode.promocode_text}\n                    {normalizedOrder.promocode.discount_percent && normalizedOrder.promocode.discount_percent !== 'null' && \n                      ` (-${normalizedOrder.promocode.discount_percent}%)`}\n                    {normalizedOrder.promocode.discount_fixed && \n                      ` (-${normalizedOrder.promocode.discount_fixed}₽)`}\n                  </span>\n                  <span>-₽{formatPrice(normalizedOrder.discount_amount)}</span>\n                </div>\n              )}\n\n              {normalizedOrder.discount_amount && normalizedOrder.discount_amount !== \"0\" && !normalizedOrder.promocode && (\n                <div className=\"flex justify-between text-sm text-telegram-blue mb-1\">\n                  <span>Скидка</span>\n                  <span>-₽{formatPrice(normalizedOrder.discount_amount)}</span>\n                </div>\n              )}\n\n              {normalizedOrder.dd_coins_used && normalizedOrder.dd_coins_used !== \"0\" && (\n                <div className=\"flex justify-between text-sm text-yellow-500 mb-1\">\n                  <span>Использовано DD Коинов</span>\n                  <span>-₽{formatPrice(normalizedOrder.dd_coins_used)}</span>\n                </div>\n              )}\n\n              {normalizedOrder.prepay_amount && normalizedOrder.prepay_amount !== \"0\" && (\n                <div className=\"flex justify-between text-sm mb-1\">\n                  <span className=\"text-gray-600 dark:text-gray-400\">Предоплата</span>\n                  <span>₽{formatPrice(normalizedOrder.prepay_amount)}</span>\n                </div>\n              )}\n\n              <div className=\"flex justify-between font-medium text-base mt-2\">\n                <span>Итого</span>\n                <span>₽{formatPrice(normalizedOrder.final_price)}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OrderCard; ","import React, { useState, useEffect } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { Share2, Copy, RefreshCw, Users as UsersIcon } from 'lucide-react';\nimport { toast } from 'sonner';\nimport { getUserReferralInfo, getReferralStats, shareReferralLink } from '@/services/api/referralService';\nimport { ReferralInfo, ReferralStats } from '@/services/api/types';\nimport LoadingSpinner from '@/components/LoadingSpinner';\n\ninterface ReferralCardProps {\n  className?: string;\n}\n\nconst ReferralCard: React.FC<ReferralCardProps> = ({ className }) => {\n  const [loadError, setLoadError] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { data: referralInfo, refetch: refetchReferralInfo } = useQuery({\n    queryKey: ['referralInfo'],\n    queryFn: () => getUserReferralInfo(),\n    staleTime: 60 * 1000, // 1 minute\n    retry: 1,\n    retryDelay: 1000,\n  });\n\n  const { data: referralStats, refetch: refetchStats } = useQuery({\n    queryKey: ['referralStats'],\n    queryFn: () => getReferralStats(),\n    staleTime: 60 * 1000, // 1 minute\n    retry: 1,\n    retryDelay: 1000,\n  });\n\n  useEffect(() => {\n    const loadData = async () => {\n      setIsLoading(true);\n      setLoadError(null);\n      try {\n        await Promise.all([\n          refetchReferralInfo(),\n          refetchStats()\n        ]);\n      } catch (error) {\n        console.error('Error loading referral data:', error);\n        setLoadError('Failed to load referral information');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadData();\n  }, [refetchReferralInfo, refetchStats]);\n\n  const handleShare = async () => {\n    if (!referralInfo) {\n      toast.error('Реферальная информация недоступна');\n      return;\n    }\n    \n    if (!referralInfo.telegram_deep_link) {\n      toast.error('Реферальная ссылка отсутствует');\n      console.error('Empty referral link:', referralInfo);\n      return;\n    }\n    \n    await shareReferralLink(referralInfo);\n  };\n\n  const handleCopyLink = async () => {\n    if (!referralInfo) {\n      toast.error('Реферальная информация недоступна');\n      return;\n    }\n    \n    if (!referralInfo.telegram_deep_link) {\n      toast.error('Реферальная ссылка отсутствует');\n      console.error('Empty referral link:', referralInfo);\n      return;\n    }\n    \n    try {\n      await navigator.clipboard.writeText(referralInfo.telegram_deep_link);\n      toast.success('Реферальная ссылка скопирована в буфер обмена');\n    } catch (error) {\n      console.error('Error copying to clipboard:', error);\n      toast.error('Не удалось скопировать реферальную ссылку');\n    }\n  };\n\n  const handleRetry = () => {\n    setIsLoading(true);\n    setLoadError(null);\n    Promise.all([\n      refetchReferralInfo(),\n      refetchStats()\n    ]).finally(() => setIsLoading(false));\n  };\n\n  if (isLoading) {\n    return (\n      <div className={`p-4 text-center ${className}`}>\n        <LoadingSpinner size=\"sm\" className=\"mx-auto\" />\n        <p className=\"mt-2 text-sm text-gray-600 dark:text-gray-400\">Загрузка информации о рефералах...</p>\n      </div>\n    );\n  }\n\n  if (loadError) {\n    return (\n      <div className={`p-4 text-center ${className}`}>\n        <p className=\"text-sm text-red-600 dark:text-red-400 mb-2\">{loadError}</p>\n        <button\n          onClick={handleRetry}\n          className=\"inline-flex items-center text-sm text-telegram-blue hover:text-telegram-dark\"\n        >\n          <RefreshCw className=\"mr-1 h-4 w-4\" />\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`space-y-2 ${className}`}>\n      {/* Referral Link Section */}\n      <div className=\"p-2 bg-telegram-secondary-bg rounded-lg\">\n        <h3 className=\"text-sm font-medium mb-2\">Ваша реферальная ссылка</h3>\n        <div className=\"flex items-center gap-2\">\n          <input\n            type=\"text\"\n            readOnly\n            value={referralInfo?.telegram_deep_link || ''}\n            placeholder={!referralInfo?.telegram_deep_link ? \"Ссылка не найдена\" : \"\"}\n            className={`flex-1 p-2 text-sm bg-white dark:bg-sidebar-primary/30 border ${!referralInfo?.telegram_deep_link ? 'border-red-300 dark:border-red-700' : 'border-gray-300 dark:border-gray-700'} rounded-md`}\n          />\n          <button\n            onClick={handleCopyLink}\n            className=\"p-2 text-telegram-blue hover:text-telegram-dark\"\n            title=\"Copy link\"\n            disabled={!referralInfo?.telegram_deep_link}\n          >\n            <Copy size={18} />\n          </button>\n          <button\n            onClick={handleShare}\n            className=\"p-2 text-telegram-blue hover:text-telegram-dark\"\n            title=\"Share link\"\n          >\n            <Share2 size={18} />\n          </button>\n        </div>\n      </div>\n\n      {/* Referrals List Section */}\n      <div className=\"p-2 bg-telegram-secondary-bg rounded-lg\">\n        <h3 className=\"text-sm font-medium mb-2\">Приглашенные друзья</h3>\n        {referralStats?.referred_users && referralStats.referred_users.length > 0 ? (\n          <div className=\"space-y-2\">\n            {referralStats.referred_users.map((user) => (\n              <div key={user.id} className=\"flex items-center justify-between text-sm\">\n                <span className=\"text-gray-700 dark:text-gray-300\">\n                  {user.username ? `@${user.username}` : `User ${user.id}`}\n                </span>\n                <span className=\"text-gray-500 dark:text-gray-400\">\n                  С нами с {new Date(user.joined_at).toLocaleDateString()}\n                </span>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n            Тут пока никого нет..\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ReferralCard; ","import React from 'react';\nimport { X } from 'lucide-react';\n\ninterface DDCoinsInfoModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nconst DDCoinsInfoModal: React.FC<DDCoinsInfoModalProps> = ({ isOpen, onClose }) => {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-start justify-center p-3 pt-5 pb-20 overflow-y-auto bg-black bg-opacity-50 backdrop-blur-sm\">\n      <div className=\"relative bg-white dark:bg-gray-800 rounded-lg max-w-md w-full max-h-[85vh] my-4 overflow-hidden\">\n        <div className=\"sticky top-0 z-10 bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 flex justify-end pt-2 px-3 pb-2\">\n          <button\n            onClick={onClose}\n            className=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 rounded-full p-1 hover:bg-gray-100 dark:hover:bg-gray-700\"\n            aria-label=\"Close\"\n          >\n            <X size={20} />\n          </button>\n        </div>\n        \n        <div className=\"p-4 pt-0 pb-6 overflow-y-auto max-h-[calc(85vh-40px)]\">\n          <h2 className=\"text-xl font-bold text-telegram-button mb-3\">О DD Coins</h2>\n          \n          <div className=\"space-y-3\">\n            {/* How to use DD section */}\n            <div className=\"space-y-1.5\">\n              <h3 className=\"text-base font-semibold\">Как использовать $DD?</h3>\n              <p className=\"text-sm text-gray-700 dark:text-gray-300\">\n                Вы можете оплачивать покупки в нашем приложении с помощью $DD!\n              </p>\n              <p className=\"text-sm text-gray-700 dark:text-gray-300\">\n                Покрывайте до <span className=\"font-bold\">50%</span> от общей стоимости заказа.\n              </p>\n              <p className=\"text-sm text-gray-700 dark:text-gray-300 font-semibold\">\n                1 $DD = 1 рубль.\n              </p>\n            </div>\n            \n            <div className=\"border-t border-gray-200 dark:border-gray-700 pt-2\"></div>\n            \n            {/* How to earn DD section */}\n            <div className=\"space-y-1.5\">\n              <h3 className=\"text-base font-semibold\">Как заработать $DD?</h3>\n              <ul className=\"list-disc list-inside space-y-1 text-sm text-gray-700 dark:text-gray-300\">\n                <li><span className=\"font-bold\">500 $DD</span> — за первый вход в приложение.</li>\n                <li><span className=\"font-bold\">500 $DD</span> — за каждого друга, который зарегистрируется и сделает первый заказ.</li>\n              </ul>\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 italic mt-1\">\n                *$DD за друга начисляются после его первой покупки.\n              </p>\n            </div>\n            \n            <div className=\"border-t border-gray-200 dark:border-gray-700 pt-2\"></div>\n            \n            {/* Bonuses section */}\n            <div className=\"space-y-1.5\">\n              <h3 className=\"text-base font-semibold\">Бонусы и ивенты</h3>\n              <p className=\"text-sm text-gray-700 dark:text-gray-300\">\n                Следите за нашим <a \n                  href=\"https://t.me/dd_concept\" \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"text-telegram-button font-bold hover:underline\"\n                >\n                  Telegram-каналом\n                </a> — совсем скоро там появятся ивенты, где можно будет зарабатывать ещё больше $DD за участие в активностях!\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DDCoinsInfoModal; ","import React, { useState, useEffect } from 'react';\nimport { updateClientInfo, getClientInfo } from '@/services/api/clientService';\nimport { fetchDeliveryTypes } from '@/services/api/orderService';\nimport { DeliveryRate } from '@/services/api/types';\nimport { toast } from 'sonner';\nimport { handleApiError } from '@/services/api/config';\nimport LoadingSpinner from '@/components/LoadingSpinner';\n\ninterface DeliveryType {\n  id: number;\n  delivery_type: string;\n  price_rub: number;\n  delivery_info: string;\n  delivery_code: string;\n}\n\ninterface ClientInfoFormProps {\n  initialEmail?: string;\n  initialPhone?: string;\n  initialAddress?: string;\n  clientInfo?: { email: string; phone_number: string; address: string } | null;\n  onComplete: (deliveryRate?: DeliveryRate) => void;\n  onCancel?: () => void;\n  // Order summary data\n  orderSubtotal?: number;\n  promocodeDiscount?: { text: string; amount: number; type: 'fixed' | 'percent' };\n  ddCoinsDiscount?: number;\n  finalPriceAfterDDCoins?: number; // The exact final price calculated in Cart\n}\n\nconst ClientInfoForm: React.FC<ClientInfoFormProps> = ({\n  initialEmail = '',\n  initialPhone = '',\n  initialAddress = '',\n  clientInfo = null,\n  onComplete,\n  onCancel,\n  // Order summary data\n  orderSubtotal,\n  promocodeDiscount,\n  ddCoinsDiscount,\n  finalPriceAfterDDCoins\n}) => {\n  // Use client info if provided, otherwise use initial values\n  const [email, setEmail] = useState<string>(clientInfo?.email || initialEmail);\n  const [phone, setPhone] = useState<string>(clientInfo?.phone_number || initialPhone);\n  const [address, setAddress] = useState<string>(clientInfo?.address || initialAddress);\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [deliveryTypes, setDeliveryTypes] = useState<DeliveryType[]>([]);\n  const [selectedDeliveryType, setSelectedDeliveryType] = useState<string>('');\n  const [isLoadingRates, setIsLoadingRates] = useState<boolean>(false);\n  \n  // Determine if all required fields are already filled\n  const hasAllRequiredInfo = Boolean(email && phone && address);\n\n  // Fetch delivery types on component mount\n  useEffect(() => {\n    const fetchDeliveryOptions = async () => {\n      setIsLoadingRates(true);\n      try {\n        const types = await fetchDeliveryTypes();\n        setDeliveryTypes(types);\n        \n        // Set default delivery type if available\n        if (types.length > 0) {\n          const courierType = types.find(type => type.delivery_type === 'courier');\n          const shippingType = types.find(type => type.delivery_type === 'shipping');\n          const defaultType = courierType || shippingType || types[0];\n          setSelectedDeliveryType(defaultType.delivery_type);\n        }\n      } catch (error) {\n        console.error('Failed to load delivery types:', error);\n      } finally {\n        setIsLoadingRates(false);\n      }\n    };\n    \n    // Fetch client info if not provided\n    const fetchClientInfo = async () => {\n      if (!clientInfo) {\n        try {\n          const info = await getClientInfo();\n          if (info) {\n            setEmail(info.email || '');\n            setPhone(info.phone_number || '');\n            setAddress(info.address || '');\n          }\n        } catch (error) {\n          console.error('Error fetching client info:', error);\n        }\n      }\n    };\n    \n    fetchDeliveryOptions();\n    fetchClientInfo();\n  }, [clientInfo]);\n\n  // Get the selected delivery type object\n  const selectedDeliveryOption = deliveryTypes.find(type => type.delivery_type === selectedDeliveryType);\n  // Convert to DeliveryRate format for compatibility with existing code\n  const selectedDeliveryRate: DeliveryRate | undefined = selectedDeliveryOption ? {\n    delivery_type: selectedDeliveryOption.delivery_type,\n    price_rub: selectedDeliveryOption.price_rub\n  } : undefined;\n  \n  const isSelfPickup = selectedDeliveryType === 'self_pickup';\n  \n  // Store the original user address\n  const [userAddress, setUserAddress] = useState<string>('');\n\n  // Update user address when it changes\n  useEffect(() => {\n    const initialAddr = clientInfo?.address || initialAddress;\n    if (initialAddr) {\n      setUserAddress(initialAddr);\n    }\n  }, [initialAddress, clientInfo]);\n\n  // Set displayed address to the store address if self pickup is selected\n  useEffect(() => {\n    if (isSelfPickup) {\n      setAddress('Москва, Ильменский проезд, 14к8');\n    } else {\n      setAddress(userAddress);\n    }\n  }, [isSelfPickup, userAddress]);\n\n  // Update the user address when typing in the address field (only when not self-pickup)\n  const handleAddressChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const newAddress = e.target.value;\n    setAddress(newAddress);\n    if (!isSelfPickup) {\n      setUserAddress(newAddress);\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    try {\n      if (!email || !phone || !selectedDeliveryType) {\n        alert('Please fill in all required fields');\n        setIsSubmitting(false);\n        return;\n      }\n\n      // Always update client info with the user's actual address, not the pickup address\n      const addressToStore = isSelfPickup ? userAddress : address;\n      \n      // Always update client info before proceeding with order\n      const success = await updateClientInfo(phone, email, addressToStore);\n\n      if (success) {\n        // alert(\"Setting delivery type to \" + selectedDeliveryRate?.delivery_type);\n        onComplete(selectedDeliveryRate);\n      } else {\n        // toast.error('Failed to update client information');\n      }\n    } catch (error) {\n      console.error('Error updating client info:', error);\n      // toast.error('Failed to update client information');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 flex items-start justify-center z-50 p-4 pb-20 overflow-y-auto bg-black bg-opacity-50 backdrop-blur-sm\">\n      <div className=\"bg-white dark:bg-sidebar-accent rounded-lg shadow-lg max-w-md w-full my-8\">\n        <div className=\"p-4 border-b dark:border-gray-700\">\n          <h2 className=\"text-lg font-semibold\">Заполните свои данные</h2>\n          <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n            {hasAllRequiredInfo ? 'Пожалуйста, проверьте свои контактные данные.' : 'Нам нужны ваши контактные данные для обработки заказа.'}\n          </p>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"p-4 space-y-4\">\n          <div className=\"space-y-2\">\n            <label className=\"block text-sm font-medium\">\n              Электронная почта <span className=\"text-red-500\">*</span>\n            </label>\n            <input\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 dark:border-gray-700 rounded dark:bg-sidebar-primary\"\n              placeholder=\"ваша@почта.com\"\n              required\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <label className=\"block text-sm font-medium\">\n              Номер телефона <span className=\"text-red-500\">*</span>\n            </label>\n            <input\n              type=\"tel\"\n              value={phone}\n              onChange={(e) => setPhone(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 dark:border-gray-700 rounded dark:bg-sidebar-primary\"\n              placeholder=\"+7 (999) 123-4567\"\n              required\n            />\n          </div>\n\n          {/* Delivery Type Selection */}\n          <div className=\"space-y-2\">\n            <label className=\"block text-sm font-medium\">\n              Способ доставки <span className=\"text-red-500\">*</span>\n            </label>\n            {isLoadingRates ? (\n              <div className=\"flex items-center space-x-2\">\n                <LoadingSpinner size=\"xs\" inline className=\"mr-2\" />\n                <span>Загрузка вариантов доставки...</span>\n              </div>\n            ) : deliveryTypes.length === 0 ? (\n              <div className=\"text-red-500\">\n                Ошибка загрузки вариантов доставки. Пожалуйста, попробуйте позже.\n              </div>\n            ) : (\n              <div className=\"grid gap-2\">\n                {deliveryTypes.map(type => (\n                  <div \n                    key={type.delivery_type}\n                    className={`p-3 border rounded-lg cursor-pointer transition-colors ${\n                      selectedDeliveryType === type.delivery_type\n                        ? 'border-telegram-blue bg-telegram-blue/10'\n                        : 'border-gray-300 dark:border-gray-700'\n                    }`}\n                    onClick={() => setSelectedDeliveryType(type.delivery_type)}\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <div className=\"font-medium\">{type.delivery_code}</div>\n                        <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                          {type.delivery_info}\n                        </div>\n                      </div>\n                      <div className=\"text-telegram-blue font-medium\">\n                        {type.price_rub > 0 ? `₽${type.price_rub}` : 'Бесплатно'}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          <div className=\"space-y-2\">\n            <label className=\"block text-sm font-medium\">\n              Адрес доставки {(selectedDeliveryType === 'courier' || selectedDeliveryType === 'shipping') && <span className=\"text-red-500\">*</span>}\n            </label>\n            <textarea\n              value={address}\n              onChange={handleAddressChange}\n              className={`w-full p-2 border rounded resize-none h-24 ${\n                isSelfPickup ? 'bg-gray-100 dark:bg-gray-800' : 'bg-white dark:bg-sidebar-primary'\n              } dark:border-gray-700`}\n              placeholder=\"Укажите ваш полный адрес\"\n              disabled={isSelfPickup}\n              required={selectedDeliveryType === 'courier' || selectedDeliveryType === 'shipping'}\n            />\n            {isSelfPickup && (\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                При самовывозе заказ можно забрать по указанному адресу\n              </p>\n            )}\n          </div>\n\n          {/* Order Summary */}\n          {orderSubtotal !== undefined && (\n            <div className=\"bg-gray-50 dark:bg-gray-900/20 border border-gray-200 dark:border-gray-700 rounded-lg p-4 mt-4\">\n              <h3 className=\"text-sm font-medium mb-3\">Сумма заказа</h3>\n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600 dark:text-gray-400\">Товары</span>\n                  <span>₽{orderSubtotal.toLocaleString()}</span>\n                </div>\n                \n                {selectedDeliveryRate && (\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600 dark:text-gray-400\">\n                      Доставка ({selectedDeliveryRate.delivery_type === 'self_pickup' \n                        ? 'Самовывоз' \n                        : selectedDeliveryRate.delivery_type === 'courier'\n                          ? 'Курьер'\n                          : 'Почта'})\n                    </span>\n                    <span>\n                      {selectedDeliveryRate.price_rub > 0 \n                        ? `₽${selectedDeliveryRate.price_rub.toLocaleString()}`\n                        : 'Бесплатно'}\n                    </span>\n                  </div>\n                )}\n                \n                {promocodeDiscount && promocodeDiscount.amount > 0 && (\n                  <div className=\"flex justify-between text-telegram-blue\">\n                    <span>Скидка ({promocodeDiscount.text})</span>\n                    <span>\n                      -{promocodeDiscount.type === 'fixed' \n                        ? `₽${promocodeDiscount.amount}` \n                        : `${promocodeDiscount.amount}%`}\n                    </span>\n                  </div>\n                )}\n                \n                {ddCoinsDiscount && ddCoinsDiscount > 0 && (\n                  <div className=\"flex justify-between text-yellow-600 dark:text-yellow-400\">\n                    <span>DD Коины</span>\n                    <span>-₽{ddCoinsDiscount}</span>\n                  </div>\n                )}\n                \n                <div className=\"flex justify-between font-medium text-base pt-2 border-t border-gray-200 dark:border-gray-600\">\n                  <span>Итого к оплате</span>\n                  <span>\n                    ₽{finalPriceAfterDDCoins !== undefined \n                      ? (finalPriceAfterDDCoins + (selectedDeliveryRate?.price_rub || 0)).toLocaleString()\n                      : Math.max(0, \n                          orderSubtotal + \n                          (selectedDeliveryRate?.price_rub || 0) - \n                          (promocodeDiscount?.type === 'fixed' ? promocodeDiscount.amount : 0) - \n                          (ddCoinsDiscount || 0)\n                        ).toLocaleString()}\n                  </span>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Manager message */}\n          <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-3 mt-4\">\n            <div className=\"flex items-start space-x-2\">\n              <div className=\"text-blue-600 dark:text-blue-400 mt-0.5\">\n                <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <div className=\"text-sm\">\n                <p className=\"text-blue-800 dark:text-blue-200 font-medium\">\n                  Перед оплатой менеджер должен проверить заказ\n                </p>\n                <p className=\"text-blue-700 dark:text-blue-300 mt-1\">\n                  Не переживайте, проверка обычно занимает не более 30 минут. После этого менеджер сам свяжется с вами и направит на оплату. Если вдруг возникнут вопросы — вы всегда можете написать нам первыми! Наш менеджер:{' '}\n                  <a \n                    href=\"https://t.me/dd_helper\" \n                    target=\"_blank\" \n                    rel=\"noopener noreferrer\"\n                    className=\"font-medium hover:underline\"\n                  >\n                    @dd_helper\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flex justify-end space-x-2 pt-4 border-t dark:border-gray-700\">\n            {onCancel && (\n              <button\n                type=\"button\"\n                onClick={onCancel}\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-md\"\n                disabled={isSubmitting}\n              >\n                Отмена\n              </button>\n            )}\n            <button\n              type=\"submit\"\n              className=\"px-4 py-2 text-sm font-medium bg-telegram-blue text-white rounded-md hover:bg-blue-600 disabled:opacity-50\"\n              disabled={isSubmitting || (!email || !phone || (isLoadingRates || !selectedDeliveryType) || ((selectedDeliveryType === 'courier' || selectedDeliveryType === 'shipping') && !address))}\n            >\n              {isSubmitting ? (\n                <>\n                  <LoadingSpinner size=\"xs\" inline className=\"mr-2\" />\n                  Сохранение...\n                </>\n              ) : (\n                'Оформить заказ'\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ClientInfoForm; ","import React from 'react';\nimport { Trash2, Plus, Minus } from 'lucide-react';\nimport { CartItem as CartItemType } from '@/contexts/CartContext';\nimport { useCart } from '@/contexts/CartContext';\nimport { hapticSelection } from '@/utils/telegramUtils';\n\ninterface CartItemProps {\n  item: CartItemType;\n  onRemove: () => void;\n}\n\nconst CartItem: React.FC<CartItemProps> = ({ item, onRemove }) => {\n  const { updateQuantity } = useCart();\n\n  const handleIncrease = () => {\n    hapticSelection();\n    updateQuantity(item.productId, item.size, item.quantity + 1);\n  };\n\n  const handleDecrease = () => {\n    hapticSelection();\n    if (item.quantity > 1) {\n      updateQuantity(item.productId, item.size, item.quantity - 1);\n    } else {\n      onRemove();\n    }\n  };\n\n  // Generate a placeholder image based on item type and category\n  const getPlaceholderImage = () => {\n    if (item.item_type === 'preorder') {\n      // Use different emojis based on product category\n      if (item.category_type === 'обувь') {\n        return '👟'; // Sneaker emoji for shoes/sneakers\n      } else if (item.category_type === 'одежда') {\n        return '👕'; // T-shirt emoji for одежда\n      } else if (item.category_type === 'аксессуары') {\n        return '👜'; // Bag emoji for accessories\n      }\n      return '🔮'; // Default crystal ball emoji for other preorders\n    }\n  };\n\n  return (\n    <div className=\"flex items-start space-x-3 p-3 bg-white dark:bg-sidebar-accent rounded-lg shadow-sm\">\n      <div className=\"flex-shrink-0 w-20 h-20 bg-gray-100 dark:bg-gray-800 rounded-md flex items-center justify-center text-4xl overflow-hidden\">\n        {item.photo_url ? (\n          <img \n            src={item.photo_url} \n            alt={item.name} \n            className=\"w-full h-full object-cover\"\n            onError={(e) => {\n              // If image fails to load, show emoji placeholder\n              e.currentTarget.style.display = 'none';\n              e.currentTarget.parentElement!.innerHTML = getPlaceholderImage();\n            }}\n          />\n        ) : (\n          getPlaceholderImage()\n        )}\n      </div>\n      \n      <div className=\"flex-1 min-w-0\">\n        <div className=\"flex justify-between\">\n          <h3 className=\"text-sm font-medium text-gray-900 dark:text-gray-100 truncate\">\n            {item.name}\n          </h3>\n          <button \n            onClick={onRemove}\n            className=\"text-red-500 hover:text-red-700\"\n            aria-label=\"Remove item\"\n          >\n            <Trash2 size={16} />\n          </button>\n        </div>\n        \n        {item.item_type === 'preorder' ? (\n          <div className=\"mt-1 text-xs text-gray-600 dark:text-gray-400\">\n            <p className=\"truncate\">URL: {item.dewu_url}</p>\n            <p>Размер: {item.size || 'Не указан'}</p>\n            <p>Категория: {\n              item.category_type === 'обувь' ? 'Обувь' : \n              item.category_type === 'одежда' ? 'Одежда' : \n              item.category_type === 'аксессуары' ? 'Аксессуары' : \n              item.category_type\n            }</p>\n            <p>Доставка: {(item.shipping_type || item.delivery_type) === 'cargo' ? 'Автомобиль' : 'Самолет'}</p>\n          </div>\n        ) : (\n          <div className=\"mt-1 text-xs text-gray-600 dark:text-gray-400\">\n            <p>{item.color && `Цвет: ${item.color}`}</p>\n            <p>Размер: {item.size}</p>\n          </div>\n        )}\n        \n        <div className=\"flex justify-between items-center mt-2\">\n          <div className=\"text-sm font-medium text-telegram-blue\">\n            ₽{(item.sale_price || item.price).toLocaleString()}\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={handleDecrease}\n              className=\"p-1 rounded-full bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700\"\n              aria-label=\"Decrease quantity\"\n            >\n              <Minus size={14} />\n            </button>\n            \n            <span className=\"text-sm font-medium w-6 text-center\">\n              {item.quantity}\n            </span>\n            \n            <button\n              onClick={handleIncrease}\n              className=\"p-1 rounded-full bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700\"\n              aria-label=\"Increase quantity\"\n            >\n              <Plus size={14} />\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CartItem; ","import React, { useState } from 'react';\nimport { validatePromocode, calculateDiscountedPrice, Promocode } from '@/services/api/promocodeService';\nimport { Tag, TicketIcon } from 'lucide-react';\nimport { toast } from 'sonner';\nimport LoadingSpinner from '@/components/LoadingSpinner';\n\ninterface PromocodeInputProps {\n  className?: string;\n  originalPrice: number;\n  onPromocodeApplied: (promocode: Promocode, finalPrice: number) => void;\n  onPromocodeRemoved: () => void;\n  currentPromocode?: Promocode;\n}\n\nconst PromocodeInput: React.FC<PromocodeInputProps> = ({\n  className,\n  originalPrice,\n  onPromocodeApplied,\n  onPromocodeRemoved,\n  currentPromocode\n}) => {\n  const [code, setCode] = useState('');\n  const [isValidating, setIsValidating] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!code.trim()) {\n      toast.error('Пожалуйста, введите промокод');\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const response = await validatePromocode(code.trim());\n      if (response.success && response.promocode) {\n        const finalPrice = calculateDiscountedPrice(originalPrice, response.promocode);\n        onPromocodeApplied(response.promocode, finalPrice);\n        toast.success('Промокод успешно применен!');\n      } else {\n        toast.error(response.message || 'Недействительный промокод');\n      }\n    } catch (error) {\n      console.error('Error validating promocode:', error);\n      toast.error('Не удалось проверить промокод');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (currentPromocode) {\n    return (\n      <div className={`flex items-center justify-between p-3 bg-telegram-secondary-bg rounded-lg ${className}`}>\n        <div className=\"flex items-center gap-2\">\n          <Tag className=\"text-telegram-blue\" size={16} />\n          <span className=\"text-sm font-medium\">{currentPromocode.promocode_text}</span>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n            {currentPromocode.discount_fixed ? \n              `-${currentPromocode.discount_fixed}₽` : \n              currentPromocode.discount_percent && currentPromocode.discount_percent !== 'null' ? \n                `-${currentPromocode.discount_percent}%` : \n                ''\n            }\n          </span>\n          <button\n            onClick={onPromocodeRemoved}\n            className=\"text-sm text-red-500 hover:text-red-600\"\n          >\n            Удалить\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className={`flex gap-2 ${className}`}>\n      <input\n        type=\"text\"\n        value={code}\n        onChange={(e) => setCode(e.target.value)}\n        placeholder=\"Введите промокод\"\n        className=\"flex-1 p-2 text-sm bg-white dark:bg-sidebar-primary/30 border border-gray-300 dark:border-gray-700 rounded-md\"\n        disabled={isLoading}\n      />\n      <button\n        type=\"submit\"\n        disabled={isLoading || !code.trim()}\n        className=\"px-4 py-2 bg-telegram-blue text-white rounded-md disabled:opacity-70 flex items-center\"\n      >\n        {isLoading ? (\n          <>\n            <LoadingSpinner size=\"xs\" inline className=\"mr-2\" />\n            Проверка...\n          </>\n        ) : (\n          'Применить'\n        )}\n      </button>\n    </form>\n  );\n};\n\nexport default PromocodeInput; ","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { scrollToTopWithRetries } from '@/utils/scrollUtils';\n\n/**\n * ScrollToTop component that forces window to scroll to top when route changes\n * Uses the scrollUtils utility for maximum reliability\n */\nconst ScrollToTop = () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    // Use our utility function that handles multiple scroll attempts\n    const cleanup = scrollToTopWithRetries();\n    console.log(`ScrollToTop component executed for path: ${pathname}`);\n    \n    // Return the cleanup function to clear all timeouts\n    return cleanup;\n  }, [pathname]);\n\n  return null;\n};\n\nexport default ScrollToTop; "],"names":["TooltipProvider","TooltipPrimitive.Provider","TooltipContent","React.forwardRef","className","sideOffset","props","ref","jsx","TooltipPrimitive.Content","cn","BottomNavigation","location","useLocation","navigate","useNavigate","itemCount","useCart","useTheme","isActive","path","handleNavigation","e","hapticSelection","scrollToTop","delay","jsxs","Link","Home","ShoppingBag","Calculator","ShoppingCart","PageLayout","children","fullHeight","hideNavigation","EmojiAvatar","emoji","username","size","randomize","displayEmoji","setDisplayEmoji","useState","useEffect","getConsistentEmoji","getRandomAvatarEmoji","sizeClasses","UserAvatar","user","sizeClass","LoadingSpinner","fillColor","inline","defaultFillColor","spinner","BannerSwiper","banners","autoPlayInterval","handleBannerClick","banner","Swiper","Pagination","Autoplay","A11y","EffectFade","index","SwiperSlide","DDManagerCard","managerBg","ArrowRight","Story","previewImage","title","onClick","viewed","formattedTitle","line","array","React","Stories","stories","onStoryClick","story","ImageSwiper","onClose","currentImageIndex","setCurrentImageIndex","isDragging","setIsDragging","translateX","setTranslateX","touchStartRef","useRef","swiperRef","goToPrevious","useCallback","prev","goToNext","handleTouchStart","handleTouchMove","touchX","touchY","deltaX","deltaY","isHorizontalMovement","hasSignificantMovement","maxDrag","limitedDeltaX","handleTouchEnd","X","image","ChevronLeft","ChevronRight","_","ProductCard","product","productEmoji","availableSizes","sortSizes","hasPhoto","getPhotoUrl","frontPhoto","photo","handleClick","hapticImpact","SizeSelector","selectedSize","onChange","handleSizeChange","PhotoSwiper","photos","productName","fallbackEmoji","currentIndex","setCurrentIndex","handleImageError","target","fallbackElement","Navigation","swiper","badgeVariants","cva","Badge","variant","OrderCard","order","isExpanded","setIsExpanded","normalizedOrder","item","getStatusColor","status","translateStatus","formatPrice","price","formatDate","dateString","getItemsCountText","count","ChevronUp","ChevronDown","ExternalLink","ReferralCard","loadError","setLoadError","isLoading","setIsLoading","referralInfo","refetchReferralInfo","useQuery","getUserReferralInfo","referralStats","refetchStats","getReferralStats","error","handleShare","toast","shareReferralLink","handleCopyLink","handleRetry","RefreshCw","Copy","Share2","DDCoinsInfoModal","isOpen","ClientInfoForm","initialEmail","initialPhone","initialAddress","clientInfo","onComplete","onCancel","orderSubtotal","promocodeDiscount","ddCoinsDiscount","finalPriceAfterDDCoins","email","setEmail","phone","setPhone","address","setAddress","isSubmitting","setIsSubmitting","deliveryTypes","setDeliveryTypes","selectedDeliveryType","setSelectedDeliveryType","isLoadingRates","setIsLoadingRates","hasAllRequiredInfo","fetchDeliveryOptions","types","fetchDeliveryTypes","courierType","type","shippingType","defaultType","fetchClientInfo","info","getClientInfo","selectedDeliveryOption","selectedDeliveryRate","isSelfPickup","userAddress","setUserAddress","initialAddr","handleAddressChange","newAddress","handleSubmit","updateClientInfo","Fragment","CartItem","onRemove","updateQuantity","handleIncrease","handleDecrease","getPlaceholderImage","Trash2","Minus","Plus","PromocodeInput","originalPrice","onPromocodeApplied","onPromocodeRemoved","currentPromocode","code","setCode","response","validatePromocode","finalPrice","calculateDiscountedPrice","Tag","ScrollToTop","pathname","cleanup","scrollToTopWithRetries"],"mappings":"yeAKA,MAAMA,GAAkBC,GAMlBC,GAAiBC,EAAAA,WAGrB,CAAC,CAAE,UAAAC,EAAW,WAAAC,EAAa,EAAG,GAAGC,GAASC,IAC1CC,EAAA,IAACC,EAAA,CACC,IAAAF,EACA,WAAAF,EACA,UAAWK,EACT,qYACAN,CACF,EACC,GAAGE,CAAA,CACN,CACD,EACDJ,GAAe,YAAcO,EAAyB,YChBtD,MAAME,GAA6B,IAAM,CACvC,MAAMC,EAAWC,IACXC,EAAWC,IACX,CAAE,UAAAC,GAAcC,IACJC,GAAS,EAE3B,MAAMC,EAAYC,GAAiBR,EAAS,WAAaQ,EAGnDC,EAAoBD,GAAkBE,GAAwB,CAClEA,EAAE,eAAe,EAGZH,EAASC,CAAI,IAEAG,IAGJC,IAGZV,EAASM,CAAI,EAGb,CAAC,GAAI,IAAK,GAAG,EAAE,QAAiBK,GAAA,CAC9B,WAAWD,EAAaC,CAAK,CAAA,CAC9B,EACH,EAGF,aACG,MAAI,CAAA,UAAU,yDACb,SAACC,EAAA,KAAA,MAAA,CAAI,UAAU,gDACb,SAAA,CAAAlB,EAAA,IAACmB,EAAA,CACC,GAAG,IACH,QAASN,EAAiB,GAAG,EAC7B,UAAWX,EACT,mEACAS,EAAS,GAAG,EAAI,8BAAgC,oBAClD,EACA,eAAcA,EAAS,GAAG,EAAI,OAAS,OAEvC,SAAAX,EAAAA,IAACoB,GAAK,CAAA,KAAM,EAAI,CAAA,CAAA,CAClB,EAEApB,EAAA,IAACmB,EAAA,CACC,GAAG,QACH,QAASN,EAAiB,OAAO,EACjC,UAAWX,EACT,mEACAS,EAAS,OAAO,EAAI,8BAAgC,oBACtD,EACA,eAAcA,EAAS,OAAO,EAAI,OAAS,OAE3C,SAAAX,EAAAA,IAACqB,GAAY,CAAA,KAAM,EAAI,CAAA,CAAA,CACzB,EAEArB,EAAA,IAACmB,EAAA,CACC,GAAG,cACH,QAASN,EAAiB,aAAa,EACvC,UAAWX,EACT,mEACAS,EAAS,aAAa,EAAI,8BAAgC,oBAC5D,EACA,eAAcA,EAAS,aAAa,EAAI,OAAS,OAEjD,SAAAX,EAAAA,IAACsB,GAAW,CAAA,KAAM,EAAI,CAAA,CAAA,CACxB,EAEAtB,EAAA,IAACmB,EAAA,CACC,GAAG,QACH,QAASN,EAAiB,OAAO,EACjC,UAAWX,EACT,4EACAS,EAAS,OAAO,EAAI,8BAAgC,oBACtD,EACA,eAAcA,EAAS,OAAO,EAAI,OAAS,OAE3C,SAAAO,EAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAClB,EAAAA,IAAAuB,GAAA,CAAa,KAAM,EAAI,CAAA,EACvBf,EAAY,GACXR,EAAAA,IAAC,OAAK,CAAA,UAAU,+HACb,SACHQ,EAAA,CAAA,EAEJ,CAAA,CACF,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,ECxFMgB,GAAwC,CAAC,CAC7C,SAAAC,EACA,UAAA7B,EACA,WAAA8B,EAAa,GACb,eAAAC,EAAiB,EACnB,IAEIT,EAAA,KAAC,MAAA,CACC,UAAWhB,EACT,gCACAwB,EAAa,eAAiB,GAC9B9B,CACF,EACA,MAAO,CAAE,gBAAiB,aAAc,EAExC,SAAA,CAACI,EAAAA,IAAA,MAAA,CAAI,UAAU,kBACZ,SAAAyB,CACH,CAAA,EACC,CAACE,GAAkB3B,EAAAA,IAACG,GAAiB,EAAA,CAAA,CAAA,CAAA,EChBtCyB,GAA0C,CAAC,CAC/C,MAAAC,EACA,SAAAC,EACA,KAAAC,EAAO,KACP,UAAAnC,EACA,UAAAoC,EAAY,EACd,IAAM,CACJ,KAAM,CAACC,EAAcC,CAAe,EAAIC,EAAAA,SAAiBN,GAAS,IAAI,EAEtEO,EAAAA,UAAU,IAAM,CACVP,EACFK,EAAgBL,CAAK,EACZC,EACOI,EAAAG,EAAmBP,EAAU,QAAQ,CAAC,EAC7CE,GACTE,EAAgBI,IAAsB,CAEvC,EAAA,CAACT,EAAOC,EAAUE,CAAS,CAAC,EAE/B,MAAMO,EAAc,CAClB,GAAI,kBACJ,GAAI,qBACJ,GAAI,oBAAA,EAIJ,OAAAvC,EAAA,IAAC,MAAA,CACC,UAAWE,EACT,qFACAqC,EAAYR,CAAI,EAChBnC,CACF,EAEA,SAACI,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAiB,SAAaiC,EAAA,CAAA,CAAA,CAGpD,ECtCMO,GAAwC,CAAC,CAC7C,KAAAC,EACA,MAAAZ,EACA,KAAAE,EAAO,KACP,UAAAnC,EAAY,EACd,IAAM,CAQE,MAAA8C,EANU,CACd,GAAI,UACJ,GAAI,YACJ,GAAI,WAAA,EAGoBX,CAAI,EAG9B,OAAIU,GAAA,MAAAA,EAAM,gBAEL,MAAI,CAAA,UAAW,GAAGC,CAAS,iCAAiC9C,CAAS,GACpE,SAAAI,EAAA,IAAC,MAAA,CACC,IAAKyC,EAAK,UACV,IAAK,GAAGA,EAAK,UAAU,aACvB,UAAU,6BACV,QAAU3B,GAAM,CAEd,QAAQ,MAAM,2DAA2D,EACvEA,EAAA,cAAc,MAAM,QAAU,MAElC,CAAA,CAEJ,CAAA,CAAA,EAMFd,EAAA,IAAC4B,GAAA,CACC,MAAAC,EACA,KAAAE,EACA,UAAAnC,CAAA,CAAA,CAGN,EC3CM+C,EAAgD,CAAC,CACrD,KAAAZ,EAAO,KACP,UAAAnC,EACA,UAAAgD,EACA,OAAAC,EAAS,EACX,IAAM,CAEJ,MAAMC,EAAmB,qBAEnBP,EAAc,CAClB,GAAI,UACJ,GAAI,UACJ,GAAI,YACJ,GAAI,YACJ,GAAI,WAAA,EAGAQ,EACF7B,EAAA,KAAC,MAAA,CACC,UAAWhB,EACT,eACAqC,EAAYR,CAAI,EAChBnC,CACF,EACA,MAAM,6BACN,KAAK,OACL,QAAQ,YAER,SAAA,CAAAI,EAAA,IAAC,SAAA,CACC,UAAU,aACV,GAAG,KACH,GAAG,KACH,EAAE,KACF,OAAO,eACP,YAAY,GAAA,CACb,EACDA,EAAA,IAAC,OAAA,CACD,UAAW4C,GAAaE,EACtB,EAAE,iHAAA,CACH,CAAA,CAAA,CAAA,EAIP,OAAID,EACKE,EAIN/C,EAAAA,IAAA,MAAA,CAAI,UAAU,mCACZ,SACH+C,CAAA,CAAA,CAEJ,ECpCMC,GAA4C,CAAC,CACjD,QAAAC,EACA,UAAArD,EAAY,GACZ,iBAAAsD,EAAmB,GACrB,IAAM,CACJ,MAAM5C,EAAWC,IAEX4C,EAAqBC,GAAuB,CAC3CA,EAAO,OAERA,EAAO,SACT,OAAO,KAAKA,EAAO,KAAM,SAAU,qBAAqB,GAG5CpC,IAGZV,EAAS8C,EAAO,IAAI,EAGpB,CAAC,GAAI,IAAK,GAAG,EAAE,QAAiBnC,GAAA,CAC9B,WAAWD,EAAaC,CAAK,CAAA,CAC9B,GACH,EAGF,MAAI,CAACgC,GAAWA,EAAQ,SAAW,EAC1B,KAIN/B,EAAA,KAAA,MAAA,CAAI,UAAW,2CAA2CtB,CAAS,GAClE,SAAA,CAAAI,EAAA,IAACqD,EAAA,CACC,QAAS,CAACC,GAAYC,GAAUC,EAAMC,EAAU,EAChD,aAAc,EACd,cAAe,EACf,WAAY,CACV,UAAW,GACX,KAAM,UACN,YAAa,2BACb,kBAAmB,kCACnB,GAAI,oBACN,EACA,WAAY,GACZ,SAAU,CACR,MAAOP,EACP,qBAAsB,EACxB,EACA,KAAMD,EAAQ,OAAS,EACvB,OAAO,QACP,UAAU,wBAET,SAAQA,EAAA,IAAI,CAACG,EAAQM,IACpB1D,EAAA,IAAC2D,EAAA,CAEC,UAAU,+BACV,QAAS,IAAMR,EAAkBC,CAAM,EAEvC,SAAApD,EAAA,IAAC,MAAA,CACC,UAAU,8CACV,MAAO,CAAE,gBAAiB,OAAOoD,EAAO,KAAK,GAAI,CAAA,CACnD,CAAA,EAPKM,CAAA,CASR,CAAA,CACH,EACA1D,EAAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAC9D,CAAA,CAAA,CAEJ,EC1FM4D,GAA0B,IAE5B1C,EAAA,KAAC,IAAA,CACC,KAAK,yBACL,OAAO,SACP,IAAI,sBACJ,UAAU,kKACV,MAAO,CAAE,gBAAiB,OAAO2C,EAAS,GAAI,EAE9C,SAAA,CAAA7D,EAAAA,IAAC,OACC,SAACA,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,sBAAU,CAC9D,CAAA,EACAA,EAAAA,IAAC,OAAI,UAAU,oCACb,eAAC,IAAE,CAAA,UAAU,wBAAwB,SAAA,0CAAA,CAAwC,CAE/E,CAAA,EACAA,EAAAA,IAAC,MAAI,CAAA,UAAU,wBACP,SAAAA,EAAA,IAAC8D,IAAW,KAAM,GAAI,UAAU,YAAA,CAAa,CACrD,CAAA,CAAA,CAAA,CAAA,ECbAC,GAAkC,CAAC,CACvC,aAAAC,EACA,MAAAC,EACA,QAAAC,EACA,OAAAC,EAAS,EACX,IAAM,CAEJ,MAAMC,EAAiBH,EAAM,MAAM;AAAA,CAAI,EAAE,IAAI,CAACI,EAAMX,EAAOY,IACxDpD,EAAA,KAAAqD,GAAM,SAAN,CACE,SAAA,CAAAF,EACAX,EAAQY,EAAM,OAAS,SAAM,KAAG,EAAA,CAAA,CAAA,EAFdZ,CAGrB,CACD,EAED,OACGxC,EAAAA,KAAA,MAAA,CAAI,UAAU,6BAA6B,QAAAgD,EAC1C,SAAA,CAAAlE,EAAAA,IAAC,OAAI,UAAW,mDAAmDmE,EAAS,kBAAoB,sBAAsB,kBACpH,SAAAnE,EAAA,IAAC,MAAA,CACC,IAAKgE,EACL,IAAKC,EACL,UAAU,4BAAA,CAAA,EAEd,EACCjE,EAAA,IAAA,MAAA,CAAI,UAAU,8CACZ,SACHoE,EAAA,CACF,CAAA,CAAA,CAEJ,ECpBMI,GAAkC,CAAC,CAAE,QAAAC,EAAS,aAAAC,EAAc,UAAA9E,EAAY,MACxE,CAAC6E,GAAWA,EAAQ,SAAW,EAC1B,KAINzE,EAAAA,IAAA,MAAA,CAAI,UAAW,UAAUJ,CAAS,GACjC,SAACI,EAAA,IAAA,MAAA,CAAI,UAAU,0CACZ,SAAQyE,EAAA,IAAKE,GACZ3E,EAAA,IAAC+D,GAAA,CAEC,aAAcY,EAAM,aACpB,MAAOA,EAAM,MACb,OAAQA,EAAM,OACd,QAAS,IAAMD,EAAaC,EAAM,EAAE,CAAA,EAJ/BA,EAAM,EAAA,CAMd,EACH,CACF,CAAA,ECzBEC,GAA0C,CAAC,CAC/C,MAAAD,EACA,QAAAE,CACF,IAAM,CACJ,KAAM,CAACC,EAAmBC,CAAoB,EAAI5C,WAAS,CAAC,EAGtD,CAAC6C,EAAYC,CAAa,EAAI9C,WAAS,EAAK,EAC5C,CAAC+C,EAAYC,CAAa,EAAIhD,WAAS,CAAC,EACxCiD,EAAgBC,EAAAA,OAAO,CAAE,EAAG,EAAG,EAAG,EAAG,EACrCC,EAAYD,SAAuB,IAAI,EAGvCE,EAAeC,EAAAA,YAAY,IAAM,CACrBzE,IACZ+D,EAAoB,GACDC,EAAAU,GAAQA,EAAO,CAAC,CACvC,EACC,CAACX,CAAiB,CAAC,EAEhBY,EAAWF,EAAAA,YAAY,IAAM,CACjBzE,IACZ+D,EAAoBH,EAAM,OAAO,OAAS,GACvBI,EAAAU,GAAQA,EAAO,CAAC,GAEtC,CAACX,EAAmBH,EAAM,OAAO,MAAM,CAAC,EAGrCgB,EAAoB7E,GAAwB,CAChDA,EAAE,eAAe,EAEjBsE,EAAc,QAAU,CACtB,EAAGtE,EAAE,QAAQ,CAAC,EAAE,QAChB,EAAGA,EAAE,QAAQ,CAAC,EAAE,OAAA,CAClB,EAGI8E,EAAmB9E,GAAwB,CAC/CA,EAAE,eAAe,EAEjB,MAAM+E,EAAS/E,EAAE,QAAQ,CAAC,EAAE,QACtBgF,EAAShF,EAAE,QAAQ,CAAC,EAAE,QACtBiF,EAASF,EAAST,EAAc,QAAQ,EACxCY,EAAS,KAAK,IAAIF,EAASV,EAAc,QAAQ,CAAC,EAGlDa,EAAuB,KAAK,IAAIF,CAAM,EAAIC,EAC1CE,EAAyB,KAAK,IAAIH,CAAM,EAAI,GAElD,GAAIE,GAAwBC,EAAwB,CAC7ClB,GACHC,EAAc,EAAI,EAIpB,MAAMkB,EAAU,IACVC,EAAgB,KAAK,IAAI,KAAK,IAAIL,EAAQ,CAACI,CAAO,EAAGA,CAAO,EAClEhB,EAAciB,CAAa,CAC7B,CAAA,EAGIC,EAAkBvF,GAAwB,CAC9CA,EAAE,eAAe,EAEbkE,IAGEE,EAAa,IAAkBJ,EAAoB,EAExCS,IACJL,EAAa,KAAmBJ,EAAoBH,EAAM,OAAO,OAAS,GAE1Ee,IAIXP,EAAc,CAAC,EACfF,EAAc,EAAK,EACrB,EAIA,OAAA/D,EAAA,KAAC,MAAI,CAAA,UAAU,sEAEb,SAAA,CAAAlB,EAAA,IAAC,MAAA,CACC,UAAU,mBACV,QAAS6E,CAAA,CACX,EAGA3D,EAAA,KAAC,MAAA,CACC,IAAKoE,EACL,UAAU,yGACV,aAAcK,EACd,YAAaC,EACb,WAAYS,EAGZ,SAAA,CAAArG,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACGe,IACR8D,GACV,EACA,UAAU,wKAEV,SAAA7E,EAAAA,IAACsG,EAAE,CAAA,KAAM,EAAI,CAAA,CAAA,CACf,EAGAtG,EAAA,IAAC,MAAI,CAAA,UAAU,uFACb,SAAAA,EAAAA,IAAC,MAAG,UAAU,mCAAoC,SAAM2E,EAAA,KAAA,CAAM,CAChE,CAAA,EAGAzD,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAAAlB,EAAA,IAAC,MAAA,CACC,UAAU,yDACV,MAAO,CACL,UAAW,oBAAoB8E,EAAoB,GAAG,OAAOI,CAAU,MACzE,EAEC,SAAMP,EAAA,OAAO,IAAI,CAAC4B,EAAO7C,IACxB1D,EAAA,IAAC,MAAA,CAEC,UAAU,oBAEV,SAAAA,EAAA,IAAC,MAAA,CACC,IAAKuG,EACL,IAAK,GAAG5B,EAAM,KAAK,MAAMjB,EAAQ,CAAC,GAClC,UAAU,6BACV,UAAW,EAAA,CACb,CAAA,EARKA,CAAA,CAUR,CAAA,CACH,EAGCoB,EAAoB,GACnB9E,EAAA,IAAC,SAAA,CACC,QAASuF,EACT,UAAU,4HAEV,SAAAvF,EAAAA,IAACwG,GAAY,CAAA,KAAM,EAAI,CAAA,CAAA,CACzB,EAGD1B,EAAoBH,EAAM,OAAO,OAAS,GACzC3E,EAAA,IAAC,SAAA,CACC,QAAS0F,EACT,UAAU,6HAEV,SAAA1F,EAAAA,IAACyG,GAAa,CAAA,KAAM,EAAI,CAAA,CAAA,CAC1B,CAAA,EAEJ,EAGAvF,EAAAA,KAAC,MAAI,CAAA,UAAU,gCAEb,SAAA,CAAClB,EAAAA,IAAA,MAAA,CAAI,UAAU,iCACZ,SAAA2E,EAAM,OAAO,IAAI,CAAC+B,EAAGhD,IACpB1D,EAAA,IAAC,SAAA,CAEC,QAAS,IAAM+E,EAAqBrB,CAAK,EACzC,UAAW,0CACTA,IAAUoB,EACN,cACA,8BACN,EAAA,EANKpB,CAQR,CAAA,EACH,EAGAxC,EAAAA,KAAC,MAAI,CAAA,UAAU,uDACZ,SAAA,CAAoB4D,EAAA,EAAE,MAAIH,EAAM,OAAO,MAAA,EAC1C,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAEJ,ECjLMgC,GAA0C,CAAC,CAAE,QAAAC,EAAS,UAAAhH,KAAgB,CAC1E,MAAMU,EAAWC,IAGXsG,EAAexE,EAAmB,GAAGuE,EAAQ,SAAS,IAAIA,EAAQ,UAAU,GAAI,SAAS,EAGzFE,EAAiB,MAAM,QAAQF,EAAQ,KAAK,EAC9CG,GAAUH,EAAQ,MAAM,UAAe7E,EAAK,SAAW,CAAC,EAAE,OAAYA,EAAK,IAAI,CAAC,EAChF,GAGEiF,EAAWJ,EAAQ,QAAUA,EAAQ,OAAO,OAAS,EAGrDK,EAAc,IAAM,CACpB,GAAA,CAACD,EAAiB,MAAA,GAGhB,MAAAE,EAAaN,EAAQ,OAAQ,QACjCO,EAAM,iBAAmB,SAAWA,EAAM,SAAS,EAGrD,OAAOD,EACHA,EAAW,UACXN,EAAQ,OAAQ,CAAC,EAAE,SAAA,EAInBQ,EAAetG,GAAwB,CAC3CA,EAAE,eAAe,EAGjBuG,GAAa,QAAQ,EAGTrG,IAGHV,EAAA,YAAYsG,EAAQ,GAAG,EAAE,EAGlC,CAAC,GAAI,IAAK,GAAG,EAAE,QAAiB3F,GAAA,CAC9B,WAAWD,EAAaC,CAAK,CAAA,CAC9B,CAAA,EAID,OAAAC,EAAA,KAACC,EAAA,CACC,GAAI,YAAYyF,EAAQ,GAAG,GAC3B,QAASQ,EACT,UAAWlH,EACT,6HACAN,CACF,EAEA,SAAA,CAACI,EAAA,IAAA,MAAA,CAAI,UAAU,gEACZ,SACCgH,EAAAhH,EAAA,IAAC,MAAA,CACC,IAAKiH,EAAY,EACjB,IAAKL,EAAQ,UACb,UAAU,6BACV,QAAU9F,GAAM,CAEZA,EAAA,cAAc,MAAM,QAAU,OAChCA,EAAE,cAAc,cAAe,UAAY,wCAAwC+F,CAAY,SACjG,CAAA,CAAA,EAGD7G,EAAA,IAAA,OAAA,CAAK,UAAU,yBAA0B,UAAa,CAAA,EAE3D,EAEAkB,EAAAA,KAAC,MAAI,CAAA,UAAU,kDACb,SAAA,CAAClB,EAAA,IAAA,MAAA,CAAI,UAAU,OACb,SAACA,EAAA,IAAA,MAAA,CAAI,UAAU,OACb,SAAAkB,OAAC,KAAG,CAAA,UAAU,0DACX,SAAA,CAAQ0F,EAAA,MAAM,IAAEA,EAAQ,SAAA,CAC3B,CAAA,CACF,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAAC1F,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,mCACb,SAAA,CAAO,OAAA0F,EAAQ,WAAc,SAC1B,WAAWA,EAAQ,SAAS,EAAE,eAAe,EAC7CA,EAAQ,UAAU,eAAe,EAAE,GAAA,EACzC,EACCA,EAAQ,WACP5G,EAAA,IAAC,MAAA,CACC,UAAU,8CACV,MAAO,CAAE,gBAAiB4G,EAAQ,SAAU,CAAA,CAC9C,CAAA,EAEJ,EACA1F,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACZ,SAAA,CAAA4F,EAAe,MAAM,EAAG,CAAC,EAAE,IAAK/E,GAC/B/B,EAAAA,IAAC,OAAgB,CAAA,UAAU,mEACxB,SAAA+B,CAAA,EADQA,CAEX,CACD,EACA+E,EAAe,OAAS,GACtB5F,EAAA,KAAA,OAAA,CAAK,UAAU,mEAAmE,SAAA,CAAA,IAC/E4F,EAAe,OAAS,CAAA,EAC5B,CAAA,EAEJ,CAAA,EACF,CAAA,EACF,CAAA,CAAA,CAAA,CAGN,ECnHMQ,GAA4C,CAAC,CACjD,eAAAR,EACA,aAAAS,EACA,SAAAC,EACA,UAAA5H,CACF,IAAM,CACE,MAAA6H,EAAoB1F,GAAiB,CACzCyF,EAASzF,CAAI,CAAA,EAGf,OACG/B,EAAAA,IAAA,MAAA,CAAI,UAAWE,EAAG,SAAUN,CAAS,EAGpC,SAACI,EAAA,IAAA,MAAA,CAAI,UAAU,uBACZ,SAAe8G,EAAA,IAAK/E,GACnB/B,EAAA,IAAC,SAAA,CAEC,UAAWE,EACT,4DACAqH,IAAiBxF,EACb,oEACA,yFACN,EACA,QAAS,IAAM0F,EAAiB1F,CAAI,EAEnC,SAAAA,CAAA,EATIA,CAAA,CAWR,EACH,CACF,CAAA,CAEJ,ECtBM2F,GAA0C,CAAC,CAC/C,OAAAC,EACA,YAAAC,EACA,cAAAC,EAAgB,KAChB,UAAAjI,EAAY,EACd,IAAM,CACJ,KAAM,CAACkI,EAAcC,CAAe,EAAI5F,WAAS,CAAC,EAG5C6F,EAAoBlH,GAAqD,CAC7E,MAAMmH,EAASnH,EAAE,cAEjB,GADAmH,EAAO,MAAM,QAAU,OACnBA,EAAO,cAAe,CAClB,MAAAC,EAAkB,SAAS,cAAc,KAAK,EACpDA,EAAgB,UAAY,iDACZA,EAAA,UAAY,wCAAwCL,CAAa,UAC1EI,EAAA,cAAc,YAAYC,CAAe,CAClD,CAAA,EAGF,MAAI,CAACP,GAAUA,EAAO,SAAW,EAE7B3H,EAAAA,IAAC,MAAI,CAAA,UAAW,wEAAwEJ,CAAS,GAC/F,SAAAI,EAAAA,IAAC,OAAK,CAAA,UAAU,yBAA0B,SAAA6H,CAAA,CAAc,CAC1D,CAAA,EAKD3G,EAAA,KAAA,MAAA,CAAI,UAAW,uEAAuEtB,CAAS,GAC9F,SAAA,CAAAI,EAAA,IAACqD,EAAA,CACC,QAAS,CAAC8E,GAAY3E,CAAI,EAC1B,aAAc,EACd,cAAe,EACf,WAAY,GACZ,cAAgB4E,GAAW,CACzBL,EAAgBK,EAAO,WAAW,CACpC,EACA,UAAU,gBAET,SAAAT,EAAO,IAAI,CAACR,EAAOzD,IACjB1D,MAAA2D,EAAA,CAAwB,UAAU,gBACjC,SAAA3D,EAAA,IAAC,MAAA,CACC,IAAKmH,EACL,IAAK,GAAGS,CAAW,MAAMlE,EAAQ,CAAC,GAClC,UAAU,6BACV,QAASsE,CAAA,CAAA,CACX,EANgBtE,CAOlB,CACD,CAAA,CACH,EAGCiE,EAAO,OAAS,GACd3H,EAAAA,IAAA,MAAA,CAAI,UAAU,sFACb,SAAAkB,EAAA,KAAC,OAAK,CAAA,UAAU,qBACb,SAAA,CAAe4G,EAAA,EAAE,MAAIH,EAAO,MAAA,CAAA,CAC/B,CACF,CAAA,CAEJ,CAAA,CAAA,CAEJ,EC7EMU,GAAgBC,GACpB,yKACA,CACE,SAAU,CACR,QAAS,CACP,QACE,4EACF,UACE,kFACF,YACE,wFACF,QAAS,iBACX,CACF,EACA,gBAAiB,CACf,QAAS,SACX,CACF,CACF,EAMA,SAASC,EAAM,CAAE,UAAA3I,EAAW,QAAA4I,EAAS,GAAG1I,GAAqB,CAC3D,OACGE,EAAA,IAAA,MAAA,CAAI,UAAWE,EAAGmI,GAAc,CAAE,QAAAG,CAAQ,CAAC,EAAG5I,CAAS,EAAI,GAAGE,CAAO,CAAA,CAE1E,CCHA,MAAM2I,GAAsC,CAAC,CAAE,MAAAC,KAAY,CACzD,KAAM,CAACC,EAAYC,CAAa,EAAIzG,WAAS,EAAK,EAG5C0G,EAAyB,CAC7B,GAAGH,EACH,cAAeA,EAAM,eAAiB,GACtC,eAAgBA,EAAM,gBAAkB,IACxC,iBAAkBA,EAAM,kBAAoB,KAC5C,cAAeA,EAAM,eAAiB,KACtC,cAAeA,EAAM,eAAiB,KACtC,MAAOA,EAAM,MAAM,IAAaI,IAAA,CAC9B,GAAGA,EACH,GAAI,OAAOA,EAAK,IAAO,SAAWA,EAAK,GAAK,EAC5C,KAAOA,EAAK,MAAiC,QAC7C,OAAQA,EAAK,QAAUJ,EAAM,QAAU,GACvC,SAAUI,EAAK,UAAY,KAC3B,cAAeA,EAAK,eAAiB,KACrC,cAAeA,EAAK,eAAiB,KACrC,gBAAiBA,EAAK,iBAAmB,KACzC,WAAYA,EAAK,YAAc,KAC/B,IAAKA,EAAK,KAAO,KACjB,UAAWA,EAAK,WAAa,KAC7B,KAAMA,EAAK,MAAQ,GACnB,UAAWA,EAAK,WAAa,KAC7B,UAAWA,EAAK,WAAa,KAC7B,WAAYA,EAAK,YAAc,KAC/B,SAAUA,EAAK,UAAY,CAAA,EAC3B,CAAA,EAGEC,EAAkBC,GAA2B,CACzC,OAAAA,EAAO,YAAe,EAAA,CAC5B,IAAK,YACL,IAAK,YACI,MAAA,eACT,IAAK,mBACL,IAAK,oBACI,MAAA,gBACT,IAAK,oBACL,IAAK,kBACI,MAAA,cACT,IAAK,YACL,IAAK,UACI,MAAA,aACT,QACS,MAAA,aACX,CAAA,EAGIC,EAAmBD,GAA2B,CAC1C,OAAAA,EAAO,YAAe,EAAA,CAC5B,IAAK,YACI,MAAA,YACT,IAAK,mBACI,MAAA,oBACT,IAAK,oBACI,MAAA,kBACT,IAAK,YACI,MAAA,UACT,QACS,OAAAA,CACX,CAAA,EAGIE,EAAeC,GACdA,GACgB,OAAOA,GAAU,SAAW,WAAWA,CAAK,EAAIA,GACjD,eAAe,QAAS,CAAE,sBAAuB,EAAG,EAFrD,IAKfC,EAAcC,GACL,IAAI,KAAKA,CAAU,EACpB,eAAe,QAAS,CAClC,KAAM,UACN,MAAO,OACP,IAAK,UACL,KAAM,UACN,OAAQ,SAAA,CACT,EAGGC,EAAqBC,GAErBA,EAAQ,KAAO,GAAKA,EAAQ,MAAQ,GAC/B,QACE,CAAC,EAAG,EAAG,CAAC,EAAE,SAASA,EAAQ,EAAE,GAAK,CAAC,CAAC,GAAI,GAAI,EAAE,EAAE,SAASA,EAAQ,GAAG,EACtE,SAEA,UAKT,OAAArI,EAAA,KAAC,MAAI,CAAA,UAAU,uEAEb,SAAA,CAAAlB,EAAA,IAAC,MAAA,CACC,UAAU,yFACV,QAAS,IAAM4I,EAAc,CAACD,CAAU,EAExC,SAAAzH,EAAA,KAAC,MAAI,CAAA,UAAU,mCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,sBAAsB,SAAA,CAAA,UAAQ2H,EAAgB,QAAA,EAAS,EACpE7I,EAAA,IAAAuI,EAAA,CAAM,UAAW,GAAGQ,EAAeF,EAAgB,MAAM,CAAC,cACxD,SAAAI,EAAgBJ,EAAgB,MAAM,CACzC,CAAA,CAAA,EACF,QACC,IAAE,CAAA,UAAU,gDACV,SAAWO,EAAAP,EAAgB,UAAU,EACxC,EACA3H,EAAAA,KAAC,IAAE,CAAA,UAAU,gDACV,SAAA,CAAA2H,EAAgB,MAAM,OAAO,IAAES,EAAkBT,EAAgB,MAAM,MAAM,CAAA,EAChF,CAAA,EACF,EACA3H,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACA,EAAAA,KAAA,IAAA,CAAE,UAAU,sBAAsB,SAAA,CAAA,IAAEgI,EAAYL,EAAgB,WAAW,CAAA,EAAE,EAC7EA,EAAgB,WACd7I,MAAA,IAAA,CAAE,UAAU,6BACV,SAAA6I,EAAgB,UAAU,cAC7B,CAAA,EAEF7I,EAAA,IAAC,SAAA,CACC,UAAU,qEACV,aAAY2I,EAAa,kBAAoB,oBAE5C,SAAAA,QAAca,GAAU,CAAA,KAAM,GAAI,EAAKxJ,EAAA,IAACyJ,GAAY,CAAA,KAAM,EAAI,CAAA,CAAA,CACjE,CAAA,EACF,CAAA,EACF,CAAA,CACF,EAGCd,SACE,MAAI,CAAA,UAAU,mDACb,SAACzH,EAAAA,KAAA,MAAA,CAAI,UAAU,gBAEZ,SAAA,CAAA2H,EAAgB,MAAM,IAAI,CAACC,EAAMpF,IAChC1D,EAAA,IAAC,MAAA,CAEC,UAAU,mDAEV,SAAAkB,EAAA,KAAC,MAAI,CAAA,UAAU,mCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,4BACb,SAAA,CAAAlB,EAAAA,IAACuI,GAAM,UAAU,mEACd,WAAK,OAAS,QAAU,OAAS,WACpC,CAAA,EACCO,EAAK,QACH9I,MAAAuI,EAAA,CAAM,UAAW,GAAGQ,EAAeD,EAAK,MAAM,CAAC,cAC7C,SAAgBG,EAAAH,EAAK,MAAM,EAC9B,CAAA,EAEJ,QAEC,IAAE,CAAA,UAAU,cACV,SAAKA,EAAA,YAAcA,EAAK,SACvB5H,EAAA,KAAC,IAAA,CACC,KAAM4H,EAAK,SACX,OAAO,SACP,IAAI,sBACJ,UAAU,uDAET,SAAA,CAAKA,EAAA,SAAS,UAAU,EAAG,EAAE,EAAGA,EAAK,SAAS,OAAS,GAAK,MAAQ,GACpE9I,EAAA,IAAA0J,GAAA,CAAa,KAAM,GAAI,UAAU,OAAO,CAAA,CAAA,CAAA,EAEzC,QACN,CAAA,EAEAxI,EAAAA,KAAC,IAAE,CAAA,UAAU,2CAA2C,SAAA,CAAA,WAC7C4H,EAAK,KAAK,IAAEA,EAAK,SAAW,GAAK,KAAKA,EAAK,QAAQ,EAAA,EAC9D,EAECA,EAAK,OAAS,YAAcA,EAAK,WAC/B5H,OAAA,IAAA,CAAE,UAAU,2CAA2C,SAAA,CAAA,iBACvCgI,EAAYJ,EAAK,SAAS,CAAA,EAC3C,EAGDA,EAAK,KACH5H,OAAA,IAAA,CAAE,UAAU,2CAA2C,SAAA,CAAA,YAC5C4H,EAAK,GAAA,EACjB,EAGDA,EAAK,eACH5H,OAAA,IAAA,CAAE,UAAU,2CAA2C,SAAA,CAAA,iBACvC4H,EAAK,aAAA,EACtB,EAGDA,EAAK,eACH5H,OAAA,IAAA,CAAE,UAAU,2CAA2C,SAAA,CAAA,cAC1C4H,EAAK,aAAA,EACnB,EAGDA,EAAK,iBACH5H,OAAA,IAAA,CAAE,UAAU,2CAA2C,SAAA,CAAA,QAChD4H,EAAK,eAAA,EACb,EAGDA,EAAK,YACH5H,OAAA,MAAA,CAAI,UAAU,mEACb,SAAA,CAAAlB,EAAAA,IAAC,QAAK,SAAK,OAAA,CAAA,EACXA,EAAA,IAAC,MAAA,CACC,UAAU,8CACV,MAAO,CAAE,gBAAiB8I,EAAK,UAAW,CAAA,CAC3C,CAAA,EACH,CAAA,EAEJ,QAEC,MAAI,CAAA,UAAU,aACb,SAAC5H,EAAA,KAAA,IAAA,CAAE,UAAU,cAAc,SAAA,CAAA,IAAEgI,EAAYJ,EAAK,SAAS,CAAA,CAAA,CAAE,CAC3D,CAAA,CAAA,EACF,CAAA,EA9EK,QAAQpF,CAAK,IAAIoF,EAAK,EAAE,EAAA,CAgFhC,EAGD5H,EAAAA,KAAC,MAAI,CAAA,UAAU,qCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAClB,EAAA,IAAA,OAAA,CAAK,UAAU,mCAAmC,SAAa,gBAAA,SAC/D,OAAK,CAAA,SAAA,CAAA,IAAEkJ,EAAYL,EAAgB,QAAQ,CAAA,EAAE,CAAA,EAChD,EAECA,EAAgB,eACd3H,OAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,mCAAmC,SAAA,CAAA,aACtC2H,EAAgB,aAAA,EAC7B,EACA7I,EAAAA,IAAC,OACE,CAAA,SAAA6I,EAAgB,iBAAmB,IAClC,YACA,IAAIK,EAAYL,EAAgB,cAAc,CAAC,EACnD,CAAA,CAAA,EACF,EAGDA,EAAgB,WACd3H,OAAA,MAAA,CAAI,UAAU,uDACb,SAAA,CAAAA,OAAC,OAAK,CAAA,SAAA,CAAA,aACO2H,EAAgB,UAAU,eACpCA,EAAgB,UAAU,kBAAoBA,EAAgB,UAAU,mBAAqB,QAC5F,MAAMA,EAAgB,UAAU,gBAAgB,KACjDA,EAAgB,UAAU,gBACzB,MAAMA,EAAgB,UAAU,cAAc,IAAA,EAClD,SACC,OAAK,CAAA,SAAA,CAAA,KAAGK,EAAYL,EAAgB,eAAe,CAAA,EAAE,CAAA,EACxD,EAGDA,EAAgB,iBAAmBA,EAAgB,kBAAoB,KAAO,CAACA,EAAgB,WAC9F3H,EAAA,KAAC,MAAI,CAAA,UAAU,uDACb,SAAA,CAAAlB,EAAAA,IAAC,QAAK,SAAM,QAAA,CAAA,SACX,OAAK,CAAA,SAAA,CAAA,KAAGkJ,EAAYL,EAAgB,eAAe,CAAA,EAAE,CAAA,EACxD,EAGDA,EAAgB,eAAiBA,EAAgB,gBAAkB,KACjE3H,OAAA,MAAA,CAAI,UAAU,oDACb,SAAA,CAAAlB,EAAAA,IAAC,QAAK,SAAsB,wBAAA,CAAA,SAC3B,OAAK,CAAA,SAAA,CAAA,KAAGkJ,EAAYL,EAAgB,aAAa,CAAA,EAAE,CAAA,EACtD,EAGDA,EAAgB,eAAiBA,EAAgB,gBAAkB,KACjE3H,OAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAClB,EAAA,IAAA,OAAA,CAAK,UAAU,mCAAmC,SAAU,aAAA,SAC5D,OAAK,CAAA,SAAA,CAAA,IAAEkJ,EAAYL,EAAgB,aAAa,CAAA,EAAE,CAAA,EACrD,EAGF3H,EAAAA,KAAC,MAAI,CAAA,UAAU,kDACb,SAAA,CAAAlB,EAAAA,IAAC,QAAK,SAAK,OAAA,CAAA,SACV,OAAK,CAAA,SAAA,CAAA,IAAEkJ,EAAYL,EAAgB,WAAW,CAAA,EAAE,CAAA,EACnD,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,CAAA,CAAA,CAEJ,EC/SMc,GAA4C,CAAC,CAAE,UAAA/J,KAAgB,CACnE,KAAM,CAACgK,EAAWC,CAAY,EAAI1H,WAAwB,IAAI,EACxD,CAAC2H,EAAWC,CAAY,EAAI5H,WAAS,EAAI,EAEzC,CAAE,KAAM6H,EAAc,QAASC,CAAA,EAAwBC,EAAS,CACpE,SAAU,CAAC,cAAc,EACzB,QAAS,IAAMC,GAAoB,EACnC,UAAW,GAAK,IAChB,MAAO,EACP,WAAY,GAAA,CACb,EAEK,CAAE,KAAMC,EAAe,QAASC,CAAA,EAAiBH,EAAS,CAC9D,SAAU,CAAC,eAAe,EAC1B,QAAS,IAAMI,GAAiB,EAChC,UAAW,GAAK,IAChB,MAAO,EACP,WAAY,GAAA,CACb,EAEDlI,EAAAA,UAAU,IAAM,EACG,SAAY,CAC3B2H,EAAa,EAAI,EACjBF,EAAa,IAAI,EACb,GAAA,CACF,MAAM,QAAQ,IAAI,CAChBI,EAAoB,EACpBI,EAAa,CAAA,CACd,QACME,EAAO,CACN,QAAA,MAAM,+BAAgCA,CAAK,EACnDV,EAAa,qCAAqC,CAAA,QAClD,CACAE,EAAa,EAAK,CACpB,CAAA,IAGO,EACR,CAACE,EAAqBI,CAAY,CAAC,EAEtC,MAAMG,EAAc,SAAY,CAC9B,GAAI,CAACR,EAAc,CACjBS,EAAM,MAAM,mCAAmC,EAC/C,MACF,CAEI,GAAA,CAACT,EAAa,mBAAoB,CACpCS,EAAM,MAAM,gCAAgC,EACpC,QAAA,MAAM,uBAAwBT,CAAY,EAClD,MACF,CAEA,MAAMU,GAAkBV,CAAY,CAAA,EAGhCW,EAAiB,SAAY,CACjC,GAAI,CAACX,EAAc,CACjBS,EAAM,MAAM,mCAAmC,EAC/C,MACF,CAEI,GAAA,CAACT,EAAa,mBAAoB,CACpCS,EAAM,MAAM,gCAAgC,EACpC,QAAA,MAAM,uBAAwBT,CAAY,EAClD,MACF,CAEI,GAAA,CACF,MAAM,UAAU,UAAU,UAAUA,EAAa,kBAAkB,EACnES,EAAM,QAAQ,+CAA+C,QACtDF,EAAO,CACN,QAAA,MAAM,8BAA+BA,CAAK,EAClDE,EAAM,MAAM,2CAA2C,CACzD,CAAA,EAGIG,EAAc,IAAM,CACxBb,EAAa,EAAI,EACjBF,EAAa,IAAI,EACjB,QAAQ,IAAI,CACVI,EAAoB,EACpBI,EAAa,CACd,CAAA,EAAE,QAAQ,IAAMN,EAAa,EAAK,CAAC,CAAA,EAGtC,OAAID,EAEC5I,EAAA,KAAA,MAAA,CAAI,UAAW,mBAAmBtB,CAAS,GAC1C,SAAA,CAAAI,EAAA,IAAC2C,EAAe,CAAA,KAAK,KAAK,UAAU,UAAU,EAC7C3C,EAAA,IAAA,IAAA,CAAE,UAAU,gDAAgD,SAAkC,qCAAA,CACjG,CAAA,CAAA,EAIA4J,EAEC1I,EAAA,KAAA,MAAA,CAAI,UAAW,mBAAmBtB,CAAS,GAC1C,SAAA,CAACI,EAAA,IAAA,IAAA,CAAE,UAAU,8CAA+C,SAAU4J,EAAA,EACtE1I,EAAA,KAAC,SAAA,CACC,QAAS0J,EACT,UAAU,+EAEV,SAAA,CAAC5K,EAAAA,IAAA6K,GAAA,CAAU,UAAU,cAAe,CAAA,EAAE,OAAA,CAAA,CAExC,CACF,CAAA,CAAA,EAKD3J,EAAA,KAAA,MAAA,CAAI,UAAW,aAAatB,CAAS,GAEpC,SAAA,CAACsB,EAAAA,KAAA,MAAA,CAAI,UAAU,0CACb,SAAA,CAAClB,EAAA,IAAA,KAAA,CAAG,UAAU,2BAA2B,SAAuB,0BAAA,EAChEkB,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAlB,EAAA,IAAC,QAAA,CACC,KAAK,OACL,SAAQ,GACR,OAAOgK,GAAA,YAAAA,EAAc,qBAAsB,GAC3C,YAAcA,GAAA,MAAAA,EAAc,mBAA2C,GAAtB,oBACjD,UAAW,iEAAkEA,GAAA,MAAAA,EAAc,mBAA4D,uCAAvC,oCAA6E,aAAA,CAC/L,EACAhK,EAAA,IAAC,SAAA,CACC,QAAS2K,EACT,UAAU,kDACV,MAAM,YACN,SAAU,EAACX,GAAA,MAAAA,EAAc,oBAEzB,SAAAhK,EAAAA,IAAC8K,GAAK,CAAA,KAAM,EAAI,CAAA,CAAA,CAClB,EACA9K,EAAA,IAAC,SAAA,CACC,QAASwK,EACT,UAAU,kDACV,MAAM,aAEN,SAAAxK,EAAAA,IAAC+K,GAAO,CAAA,KAAM,EAAI,CAAA,CAAA,CACpB,CAAA,EACF,CAAA,EACF,EAGA7J,EAAAA,KAAC,MAAI,CAAA,UAAU,0CACb,SAAA,CAAClB,EAAA,IAAA,KAAA,CAAG,UAAU,2BAA2B,SAAmB,sBAAA,EAC3DoK,GAAA,MAAAA,EAAe,gBAAkBA,EAAc,eAAe,OAAS,QACrE,MAAI,CAAA,UAAU,YACZ,SAAAA,EAAc,eAAe,IAAK3H,GAChCvB,OAAA,MAAA,CAAkB,UAAU,4CAC3B,SAAA,CAAAlB,EAAA,IAAC,OAAK,CAAA,UAAU,mCACb,SAAAyC,EAAK,SAAW,IAAIA,EAAK,QAAQ,GAAK,QAAQA,EAAK,EAAE,GACxD,EACAvB,EAAAA,KAAC,OAAK,CAAA,UAAU,mCAAmC,SAAA,CAAA,YACvC,IAAI,KAAKuB,EAAK,SAAS,EAAE,mBAAmB,CAAA,EACxD,CANQ,CAAA,EAAAA,EAAK,EAOf,CACD,CACH,CAAA,EAECzC,EAAAA,IAAA,IAAA,CAAE,UAAU,2CAA2C,SAExD,uBAAA,CAAA,CAAA,EAEJ,CACF,CAAA,CAAA,CAEJ,ECxKMgL,GAAoD,CAAC,CAAE,OAAAC,EAAQ,QAAApG,KAC9DoG,QAGF,MAAI,CAAA,UAAU,4HACb,SAAC/J,EAAA,KAAA,MAAA,CAAI,UAAU,kGACb,SAAA,CAAClB,EAAAA,IAAA,MAAA,CAAI,UAAU,4HACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS6E,EACT,UAAU,0IACV,aAAW,QAEX,SAAA7E,EAAAA,IAACsG,EAAE,CAAA,KAAM,EAAI,CAAA,CAAA,CAAA,EAEjB,EAEApF,EAAAA,KAAC,MAAI,CAAA,UAAU,wDACb,SAAA,CAAClB,EAAA,IAAA,KAAA,CAAG,UAAU,8CAA8C,SAAU,aAAA,EAEtEkB,EAAAA,KAAC,MAAI,CAAA,UAAU,YAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAAClB,EAAA,IAAA,KAAA,CAAG,UAAU,0BAA0B,SAAqB,wBAAA,EAC5DA,EAAA,IAAA,IAAA,CAAE,UAAU,2CAA2C,SAExD,iEAAA,EACAkB,EAAAA,KAAC,IAAE,CAAA,UAAU,2CAA2C,SAAA,CAAA,iBACvClB,EAAA,IAAA,OAAA,CAAK,UAAU,YAAY,SAAG,MAAA,EAAO,6BAAA,EACtD,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,yDAAyD,SAEtE,mBAAA,CAAA,EACF,EAEAA,EAAAA,IAAC,MAAI,CAAA,UAAU,oDAAqD,CAAA,EAGpEkB,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAAClB,EAAA,IAAA,KAAA,CAAG,UAAU,0BAA0B,SAAmB,sBAAA,EAC3DkB,EAAAA,KAAC,KAAG,CAAA,UAAU,2EACZ,SAAA,CAAAA,OAAC,KAAG,CAAA,SAAA,CAAClB,EAAA,IAAA,OAAA,CAAK,UAAU,YAAY,SAAO,UAAA,EAAO,iCAAA,EAA+B,SAC5E,KAAG,CAAA,SAAA,CAACA,EAAA,IAAA,OAAA,CAAK,UAAU,YAAY,SAAO,UAAA,EAAO,uEAAA,EAAqE,CAAA,EACrH,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,uDAAuD,SAEpE,sDAAA,CAAA,EACF,EAEAA,EAAAA,IAAC,MAAI,CAAA,UAAU,oDAAqD,CAAA,EAGpEkB,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAAClB,EAAA,IAAA,KAAA,CAAG,UAAU,0BAA0B,SAAe,kBAAA,EACvDkB,EAAAA,KAAC,IAAE,CAAA,UAAU,2CAA2C,SAAA,CAAA,oBACrClB,EAAA,IAAC,IAAA,CAChB,KAAK,0BACL,OAAO,SACP,IAAI,sBACJ,UAAU,iDACX,SAAA,kBAAA,CAED,EAAI,4GAAA,EACN,CAAA,EACF,CAAA,EACF,CAAA,EACF,CAAA,CACF,CAAA,CACF,CAAA,EAlEkB,KCqBhBkL,GAAgD,CAAC,CACrD,aAAAC,EAAe,GACf,aAAAC,EAAe,GACf,eAAAC,EAAiB,GACjB,WAAAC,EAAa,KACb,WAAAC,EACA,SAAAC,EAEA,cAAAC,EACA,kBAAAC,EACA,gBAAAC,EACA,uBAAAC,CACF,IAAM,CAEJ,KAAM,CAACC,EAAOC,CAAQ,EAAI3J,EAAiB,UAAAmJ,GAAA,YAAAA,EAAY,QAASH,CAAY,EACtE,CAACY,EAAOC,CAAQ,EAAI7J,EAAiB,UAAAmJ,GAAA,YAAAA,EAAY,eAAgBF,CAAY,EAC7E,CAACa,EAASC,CAAU,EAAI/J,EAAiB,UAAAmJ,GAAA,YAAAA,EAAY,UAAWD,CAAc,EAC9E,CAACc,EAAcC,CAAe,EAAIjK,WAAkB,EAAK,EACzD,CAACkK,EAAeC,CAAgB,EAAInK,EAAA,SAAyB,CAAE,CAAA,EAC/D,CAACoK,EAAsBC,CAAuB,EAAIrK,WAAiB,EAAE,EACrE,CAACsK,EAAgBC,CAAiB,EAAIvK,WAAkB,EAAK,EAG7DwK,EAAqB,GAAQd,GAASE,GAASE,GAGrD7J,EAAAA,UAAU,IAAM,CACd,MAAMwK,EAAuB,SAAY,CACvCF,EAAkB,EAAI,EAClB,GAAA,CACI,MAAAG,EAAQ,MAAMC,KAIhB,GAHJR,EAAiBO,CAAK,EAGlBA,EAAM,OAAS,EAAG,CACpB,MAAME,GAAcF,EAAM,KAAaG,GAAAA,EAAK,gBAAkB,SAAS,EACjEC,GAAeJ,EAAM,KAAaG,GAAAA,EAAK,gBAAkB,UAAU,EACnEE,GAAcH,IAAeE,IAAgBJ,EAAM,CAAC,EAC1DL,EAAwBU,GAAY,aAAa,CACnD,QACO3C,EAAO,CACN,QAAA,MAAM,iCAAkCA,CAAK,CAAA,QACrD,CACAmC,EAAkB,EAAK,CACzB,CAAA,EAIIS,EAAkB,SAAY,CAClC,GAAI,CAAC7B,EACC,GAAA,CACI,MAAA8B,EAAO,MAAMC,KACfD,IACOtB,EAAAsB,EAAK,OAAS,EAAE,EAChBpB,EAAAoB,EAAK,cAAgB,EAAE,EACrBlB,EAAAkB,EAAK,SAAW,EAAE,SAExB7C,EAAO,CACN,QAAA,MAAM,8BAA+BA,CAAK,CACpD,CACF,EAGmBqC,IACLO,GAAA,EACf,CAAC7B,CAAU,CAAC,EAGf,MAAMgC,EAAyBjB,EAAc,KAAaW,GAAAA,EAAK,gBAAkBT,CAAoB,EAE/FgB,EAAiDD,EAAyB,CAC9E,cAAeA,EAAuB,cACtC,UAAWA,EAAuB,SAChC,EAAA,OAEEE,EAAejB,IAAyB,cAGxC,CAACkB,EAAaC,CAAc,EAAIvL,WAAiB,EAAE,EAGzDC,EAAAA,UAAU,IAAM,CACR,MAAAuL,GAAcrC,GAAA,YAAAA,EAAY,UAAWD,EACvCsC,GACFD,EAAeC,CAAW,CAC5B,EACC,CAACtC,EAAgBC,CAAU,CAAC,EAG/BlJ,EAAAA,UAAU,IAAM,CAEZ8J,EADEsB,EACS,kCAEAC,CAFiC,CAG9C,EACC,CAACD,EAAcC,CAAW,CAAC,EAGxB,MAAAG,EAAuB9M,GAA8C,CACnE,MAAA+M,EAAa/M,EAAE,OAAO,MAC5BoL,EAAW2B,CAAU,EAChBL,GACHE,EAAeG,CAAU,CAC3B,EAGIC,GAAe,MAAOhN,GAAuB,CACjDA,EAAE,eAAe,EACjBsL,EAAgB,EAAI,EAEhB,GAAA,CACF,GAAI,CAACP,GAAS,CAACE,GAAS,CAACQ,EAAsB,CAC7C,MAAM,oCAAoC,EAC1CH,EAAgB,EAAK,EACrB,MACF,CAMgB,MAAM2B,GAAiBhC,EAAOF,EAHvB2B,EAAeC,EAAcxB,CAGe,GAIjEV,EAAWgC,CAAoB,QAI1BhD,EAAO,CACN,QAAA,MAAM,8BAA+BA,CAAK,CAAA,QAElD,CACA6B,EAAgB,EAAK,CACvB,CAAA,EAGF,aACG,MAAI,CAAA,UAAU,uHACb,SAAClL,EAAA,KAAA,MAAA,CAAI,UAAU,4EACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAClB,EAAA,IAAA,KAAA,CAAG,UAAU,wBAAwB,SAAqB,wBAAA,QAC1D,IAAE,CAAA,UAAU,gDACV,SAAA2M,EAAqB,gDAAkD,yDAC1E,CAAA,EACF,EAECzL,EAAA,KAAA,OAAA,CAAK,SAAU4M,GAAc,UAAU,gBACtC,SAAA,CAAC5M,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,QAAA,CAAM,UAAU,4BAA4B,SAAA,CAAA,qBACxBlB,EAAA,IAAA,OAAA,CAAK,UAAU,eAAe,SAAC,IAAA,CAAA,EACpD,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,QACL,MAAO6L,EACP,SAAW/K,GAAMgL,EAAShL,EAAE,OAAO,KAAK,EACxC,UAAU,yFACV,YAAY,iBACZ,SAAQ,EAAA,CACV,CAAA,EACF,EAEAI,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,QAAA,CAAM,UAAU,4BAA4B,SAAA,CAAA,kBAC3BlB,EAAA,IAAA,OAAA,CAAK,UAAU,eAAe,SAAC,IAAA,CAAA,EACjD,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,MACL,MAAO+L,EACP,SAAWjL,GAAMkL,EAASlL,EAAE,OAAO,KAAK,EACxC,UAAU,yFACV,YAAY,oBACZ,SAAQ,EAAA,CACV,CAAA,EACF,EAGAI,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,QAAA,CAAM,UAAU,4BAA4B,SAAA,CAAA,mBAC1BlB,EAAA,IAAA,OAAA,CAAK,UAAU,eAAe,SAAC,IAAA,CAAA,EAClD,EACCyM,EACCvL,EAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAlB,MAAC2C,GAAe,KAAK,KAAK,OAAM,GAAC,UAAU,OAAO,EAClD3C,EAAAA,IAAC,QAAK,SAA8B,gCAAA,CAAA,CAAA,EACtC,EACEqM,EAAc,SAAW,EAC3BrM,MAAC,OAAI,UAAU,eAAe,SAE9B,mEAAA,CAAA,QAEC,MAAI,CAAA,UAAU,aACZ,SAAAqM,EAAc,IACbW,GAAAhN,EAAA,IAAC,MAAA,CAEC,UAAW,0DACTuM,IAAyBS,EAAK,cAC1B,2CACA,sCACN,GACA,QAAS,IAAMR,EAAwBQ,EAAK,aAAa,EAEzD,SAAA9L,EAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAlB,EAAA,IAAC,MAAI,CAAA,UAAU,cAAe,SAAAgN,EAAK,cAAc,EAChDhN,EAAA,IAAA,MAAA,CAAI,UAAU,2CACZ,WAAK,cACR,CAAA,EACF,EACAA,EAAA,IAAC,MAAI,CAAA,UAAU,iCACZ,SAAAgN,EAAK,UAAY,EAAI,IAAIA,EAAK,SAAS,GAAK,WAC/C,CAAA,CAAA,EACF,CAAA,EAlBKA,EAAK,aAoBb,CAAA,EACH,CAAA,EAEJ,EAEA9L,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,QAAA,CAAM,UAAU,4BAA4B,SAAA,CAAA,mBAC1BqL,IAAyB,WAAaA,IAAyB,mBAAgB,OAAK,CAAA,UAAU,eAAe,SAAC,GAAA,CAAA,CAAA,EACjI,EACAvM,EAAA,IAAC,WAAA,CACC,MAAOiM,EACP,SAAU2B,EACV,UAAW,8CACTJ,EAAe,+BAAiC,kCAClD,wBACA,YAAY,2BACZ,SAAUA,EACV,SAAUjB,IAAyB,WAAaA,IAAyB,UAAA,CAC3E,EACCiB,GACCxN,EAAA,IAAC,IAAE,CAAA,UAAU,gDAAgD,SAE7D,0DAAA,CAAA,EAEJ,EAGCyL,IAAkB,QAChBvK,EAAA,KAAA,MAAA,CAAI,UAAU,iGACb,SAAA,CAAClB,EAAA,IAAA,KAAA,CAAG,UAAU,2BAA2B,SAAY,eAAA,EACrDkB,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAAClB,EAAA,IAAA,OAAA,CAAK,UAAU,mCAAmC,SAAM,SAAA,SACxD,OAAK,CAAA,SAAA,CAAA,IAAEyL,EAAc,eAAe,CAAA,EAAE,CAAA,EACzC,EAEC8B,GACCrM,EAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,mCAAmC,SAAA,CAAA,aACtCqM,EAAqB,gBAAkB,cAC9C,YACAA,EAAqB,gBAAkB,UACrC,SACA,QAAQ,GAAA,EAChB,EACAvN,EAAAA,IAAC,OACE,CAAA,SAAAuN,EAAqB,UAAY,EAC9B,IAAIA,EAAqB,UAAU,eAAgB,CAAA,GACnD,WACN,CAAA,CAAA,EACF,EAGD7B,GAAqBA,EAAkB,OAAS,GAC9CxK,EAAAA,KAAA,MAAA,CAAI,UAAU,0CACb,SAAA,CAAAA,OAAC,OAAK,CAAA,SAAA,CAAA,WAASwK,EAAkB,KAAK,GAAA,EAAC,SACtC,OAAK,CAAA,SAAA,CAAA,IACFA,EAAkB,OAAS,QACzB,IAAIA,EAAkB,MAAM,GAC5B,GAAGA,EAAkB,MAAM,GAAA,EACjC,CAAA,EACF,EAGDC,GAAmBA,EAAkB,GACnCzK,EAAA,KAAA,MAAA,CAAI,UAAU,4DACb,SAAA,CAAAlB,EAAAA,IAAC,QAAK,SAAQ,UAAA,CAAA,SACb,OAAK,CAAA,SAAA,CAAA,KAAG2L,CAAA,EAAgB,CAAA,EAC3B,EAGFzK,EAAAA,KAAC,MAAI,CAAA,UAAU,gGACb,SAAA,CAAAlB,EAAAA,IAAC,QAAK,SAAc,gBAAA,CAAA,SACnB,OAAK,CAAA,SAAA,CAAA,IACF4L,IAA2B,QACxBA,IAA0B2B,GAAA,YAAAA,EAAsB,YAAa,IAAI,iBAClE,KAAK,IAAI,EACP9B,IACC8B,GAAA,YAAAA,EAAsB,YAAa,KACnC7B,GAAA,YAAAA,EAAmB,QAAS,QAAUA,EAAkB,OAAS,IACjEC,GAAmB,IACpB,eAAe,CAAA,EACvB,CAAA,EACF,CAAA,EACF,CAAA,EACF,QAID,MAAI,CAAA,UAAU,iGACb,SAACzK,EAAA,KAAA,MAAA,CAAI,UAAU,6BACb,SAAA,CAAClB,EAAAA,IAAA,MAAA,CAAI,UAAU,0CACb,SAAAA,MAAC,OAAI,UAAU,UAAU,KAAK,eAAe,QAAQ,YACnD,SAACA,EAAA,IAAA,OAAA,CAAK,SAAS,UAAU,EAAE,mIAAmI,SAAS,UAAU,EACnL,CACF,CAAA,EACAkB,EAAAA,KAAC,MAAI,CAAA,UAAU,UACb,SAAA,CAAClB,EAAA,IAAA,IAAA,CAAE,UAAU,+CAA+C,SAE5D,gDAAA,EACAkB,EAAAA,KAAC,IAAE,CAAA,UAAU,wCAAwC,SAAA,CAAA,iNAC4J,IAC/MlB,EAAA,IAAC,IAAA,CACC,KAAK,yBACL,OAAO,SACP,IAAI,sBACJ,UAAU,8BACX,SAAA,YAAA,CAED,CAAA,EACF,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,EAEAkB,EAAAA,KAAC,MAAI,CAAA,UAAU,gEACZ,SAAA,CACCsK,GAAAxL,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAASwL,EACT,UAAU,qHACV,SAAUW,EACX,SAAA,QAAA,CAED,EAEFnM,EAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAU,6GACV,SAAUmM,GAAiB,CAACN,GAAS,CAACE,GAAUU,GAAkB,CAACF,IAA2BA,IAAyB,WAAaA,IAAyB,aAAe,CAACN,EAE5K,WAEG/K,EAAAA,KAAA8M,EAAA,SAAA,CAAA,SAAA,CAAAhO,MAAC2C,GAAe,KAAK,KAAK,OAAM,GAAC,UAAU,OAAO,EAAE,eAAA,CAAA,CAEtD,EAEA,gBAAA,CAEJ,CAAA,EACF,CAAA,EACF,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,EC1XMsL,GAAoC,CAAC,CAAE,KAAAnF,EAAM,SAAAoF,KAAe,CAC1D,KAAA,CAAE,eAAAC,GAAmB1N,IAErB2N,EAAiB,IAAM,CACXrN,IAChBoN,EAAerF,EAAK,UAAWA,EAAK,KAAMA,EAAK,SAAW,CAAC,CAAA,EAGvDuF,EAAiB,IAAM,CACXtN,IACZ+H,EAAK,SAAW,EAClBqF,EAAerF,EAAK,UAAWA,EAAK,KAAMA,EAAK,SAAW,CAAC,EAElDoF,GACX,EAIII,EAAsB,IAAM,CAC5B,GAAAxF,EAAK,YAAc,WAEjB,OAAAA,EAAK,gBAAkB,QAClB,KACEA,EAAK,gBAAkB,SACzB,KACEA,EAAK,gBAAkB,aACzB,KAEF,IACT,EAIA,OAAA5H,EAAA,KAAC,MAAI,CAAA,UAAU,sFACb,SAAA,CAAAlB,EAAA,IAAC,MAAI,CAAA,UAAU,4HACZ,SAAA8I,EAAK,UACJ9I,EAAA,IAAC,MAAA,CACC,IAAK8I,EAAK,UACV,IAAKA,EAAK,KACV,UAAU,6BACV,QAAUhI,GAAM,CAEZA,EAAA,cAAc,MAAM,QAAU,OAC9BA,EAAA,cAAc,cAAe,UAAYwN,EAAoB,CACjE,CAAA,CAAA,EAGFA,EAEJ,CAAA,CAAA,EAEApN,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAlB,EAAA,IAAC,KAAG,CAAA,UAAU,gEACX,SAAA8I,EAAK,KACR,EACA9I,EAAA,IAAC,SAAA,CACC,QAASkO,EACT,UAAU,kCACV,aAAW,cAEX,SAAAlO,EAAAA,IAACuO,GAAO,CAAA,KAAM,EAAI,CAAA,CAAA,CACpB,CAAA,EACF,EAECzF,EAAK,YAAc,WACjB5H,EAAA,KAAA,MAAA,CAAI,UAAU,gDACb,SAAA,CAACA,EAAAA,KAAA,IAAA,CAAE,UAAU,WAAW,SAAA,CAAA,QAAM4H,EAAK,QAAA,EAAS,SAC3C,IAAE,CAAA,SAAA,CAAA,WAASA,EAAK,MAAQ,WAAA,EAAY,SACpC,IAAE,CAAA,SAAA,CAAA,cACDA,EAAK,gBAAkB,QAAU,QACjCA,EAAK,gBAAkB,SAAW,SAClCA,EAAK,gBAAkB,aAAe,aACtCA,EAAK,aAAA,EACN,SACA,IAAE,CAAA,SAAA,CAAA,cAAYA,EAAK,eAAiBA,EAAK,iBAAmB,QAAU,aAAe,SAAA,EAAU,CAAA,CAClG,CAAA,EAEA5H,EAAAA,KAAC,MAAI,CAAA,UAAU,gDACb,SAAA,CAAAlB,EAAAA,IAAC,KAAG,SAAK8I,EAAA,OAAS,SAASA,EAAK,KAAK,GAAG,SACvC,IAAE,CAAA,SAAA,CAAA,WAASA,EAAK,IAAA,EAAK,CAAA,EACxB,EAGF5H,EAAAA,KAAC,MAAI,CAAA,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCAAyC,SAAA,CAAA,KACnD4H,EAAK,YAAcA,EAAK,OAAO,eAAe,CAAA,EACnD,EAEA5H,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAlB,EAAA,IAAC,SAAA,CACC,QAASqO,EACT,UAAU,yFACV,aAAW,oBAEX,SAAArO,EAAAA,IAACwO,GAAM,CAAA,KAAM,EAAI,CAAA,CAAA,CACnB,EAECxO,EAAA,IAAA,OAAA,CAAK,UAAU,sCACb,WAAK,SACR,EAEAA,EAAA,IAAC,SAAA,CACC,QAASoO,EACT,UAAU,yFACV,aAAW,oBAEX,SAAApO,EAAAA,IAACyO,GAAK,CAAA,KAAM,EAAI,CAAA,CAAA,CAClB,CAAA,EACF,CAAA,EACF,CAAA,EACF,CACF,CAAA,CAAA,CAEJ,EC/GMC,GAAgD,CAAC,CACrD,UAAA9O,EACA,cAAA+O,EACA,mBAAAC,EACA,mBAAAC,EACA,iBAAAC,CACF,IAAM,CACJ,KAAM,CAACC,EAAMC,CAAO,EAAI7M,WAAS,EAAE,EACKA,EAAAA,SAAS,EAAK,EACtD,KAAM,CAAC2H,EAAWC,CAAY,EAAI5H,WAAS,EAAK,EAE1C2L,EAAe,MAAOhN,GAAuB,CAE7C,GADJA,EAAE,eAAe,EACb,CAACiO,EAAK,OAAQ,CAChBtE,EAAM,MAAM,8BAA8B,EAC1C,MACF,CAEAV,EAAa,EAAI,EACb,GAAA,CACF,MAAMkF,EAAW,MAAMC,GAAkBH,EAAK,KAAM,CAAA,EAChD,GAAAE,EAAS,SAAWA,EAAS,UAAW,CAC1C,MAAME,EAAaC,GAAyBT,EAAeM,EAAS,SAAS,EAC1DL,EAAAK,EAAS,UAAWE,CAAU,EACjD1E,EAAM,QAAQ,4BAA4B,CAAA,MAEpCA,EAAA,MAAMwE,EAAS,SAAW,2BAA2B,QAEtD1E,EAAO,CACN,QAAA,MAAM,8BAA+BA,CAAK,EAClDE,EAAM,MAAM,+BAA+B,CAAA,QAC3C,CACAV,EAAa,EAAK,CACpB,CAAA,EAGF,OAAI+E,EAEC5N,EAAA,KAAA,MAAA,CAAI,UAAW,6EAA6EtB,CAAS,GACpG,SAAA,CAACsB,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAlB,EAAA,IAACqP,GAAI,CAAA,UAAU,qBAAqB,KAAM,GAAI,EAC7CrP,EAAA,IAAA,OAAA,CAAK,UAAU,sBAAuB,WAAiB,eAAe,CAAA,EACzE,EACAkB,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAlB,EAAAA,IAAC,QAAK,UAAU,2CACb,WAAiB,eAChB,IAAI8O,EAAiB,cAAc,IACnCA,EAAiB,kBAAoBA,EAAiB,mBAAqB,OACzE,IAAIA,EAAiB,gBAAgB,IACrC,EAEN,CAAA,EACA9O,EAAA,IAAC,SAAA,CACC,QAAS6O,EACT,UAAU,0CACX,SAAA,SAAA,CAED,CAAA,EACF,CACF,CAAA,CAAA,SAKD,OAAK,CAAA,SAAUf,EAAc,UAAW,cAAclO,CAAS,GAC9D,SAAA,CAAAI,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO+O,EACP,SAAWjO,GAAMkO,EAAQlO,EAAE,OAAO,KAAK,EACvC,YAAY,mBACZ,UAAU,gHACV,SAAUgJ,CAAA,CACZ,EACA9J,EAAA,IAAC,SAAA,CACC,KAAK,SACL,SAAU8J,GAAa,CAACiF,EAAK,KAAK,EAClC,UAAU,yFAET,WAEG7N,EAAAA,KAAA8M,EAAA,SAAA,CAAA,SAAA,CAAAhO,MAAC2C,GAAe,KAAK,KAAK,OAAM,GAAC,UAAU,OAAO,EAAE,aAAA,CAAA,CAEtD,EAEA,WAAA,CAEJ,CACF,CAAA,CAAA,CAEJ,EC/FM2M,GAAc,IAAM,CAClB,KAAA,CAAE,SAAAC,GAAalP,IAErB+B,OAAAA,EAAAA,UAAU,IAAM,CAEd,MAAMoN,EAAUC,KACR,eAAA,IAAI,4CAA4CF,CAAQ,EAAE,EAG3DC,CAAA,EACN,CAACD,CAAQ,CAAC,EAEN,IACT"}